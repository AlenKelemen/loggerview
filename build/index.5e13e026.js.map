{"mappings":"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","sources":["./node_modules/@parcel/scope-hoisting/lib/helpers.js","./src/util.js","./node_modules/dayjs/dayjs.min.js","./node_modules/dayjs/plugin/utc.js","./node_modules/chart.js/dist/chunks/helpers.segment.js","./node_modules/chart.js/dist/chart.esm.js","./src/index.js"],"sourcesContent":["var $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$export(e, n, v) {\n  Object.defineProperty(e, n, {get: v, enumerable: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n","/**\r\n * <body>\r\n  <script>\r\n    document.body.appendChild(elt(\"button\", {\r\n      onclick: () => console.log(\"click\")\r\n    }, \"The button\"));\r\n  </script>\r\n</body>\r\n * \r\n * @export\r\n * @param {string} type node name\r\n * @param {Object} props props \r\n * @param {string} children list of children\r\n * @returns {Object} DOM element\r\n */\r\nexport function elt(type, props, ...children) {\r\n    let dom = document.createElement(type);\r\n    if (props) Object.assign(dom, props);\r\n    for (let child of children) {\r\n      if (typeof child != \"string\") dom.appendChild(child);\r\n      else dom.appendChild(document.createTextNode(child));\r\n    }\r\n    return dom;\r\n  }","!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):t.dayjs=e()}(this,function(){\"use strict\";var t=\"millisecond\",e=\"second\",n=\"minute\",r=\"hour\",i=\"day\",s=\"week\",u=\"month\",a=\"quarter\",o=\"year\",f=\"date\",h=/^(\\d{4})[-/]?(\\d{1,2})?[-/]?(\\d{0,2})[^0-9]*(\\d{1,2})?:?(\\d{1,2})?:?(\\d{1,2})?[.:]?(\\d+)?$/,c=/\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,d={name:\"en\",weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\")},$=function(t,e,n){var r=String(t);return!r||r.length>=e?t:\"\"+Array(e+1-r.length).join(n)+t},l={s:$,z:function(t){var e=-t.utcOffset(),n=Math.abs(e),r=Math.floor(n/60),i=n%60;return(e<=0?\"+\":\"-\")+$(r,2,\"0\")+\":\"+$(i,2,\"0\")},m:function t(e,n){if(e.date()<n.date())return-t(n,e);var r=12*(n.year()-e.year())+(n.month()-e.month()),i=e.clone().add(r,u),s=n-i<0,a=e.clone().add(r+(s?-1:1),u);return+(-(r+(n-i)/(s?i-a:a-i))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(h){return{M:u,y:o,w:s,d:i,D:f,h:r,m:n,s:e,ms:t,Q:a}[h]||String(h||\"\").toLowerCase().replace(/s$/,\"\")},u:function(t){return void 0===t}},y=\"en\",M={};M[y]=d;var m=function(t){return t instanceof S},D=function(t,e,n){var r;if(!t)return y;if(\"string\"==typeof t)M[t]&&(r=t),e&&(M[t]=e,r=t);else{var i=t.name;M[i]=t,r=i}return!n&&r&&(y=r),r||!n&&y},v=function(t,e){if(m(t))return t.clone();var n=\"object\"==typeof e?e:{};return n.date=t,n.args=arguments,new S(n)},g=l;g.l=D,g.i=m,g.w=function(t,e){return v(t,{locale:e.$L,utc:e.$u,x:e.$x,$offset:e.$offset})};var S=function(){function d(t){this.$L=D(t.locale,null,!0),this.parse(t)}var $=d.prototype;return $.parse=function(t){this.$d=function(t){var e=t.date,n=t.utc;if(null===e)return new Date(NaN);if(g.u(e))return new Date;if(e instanceof Date)return new Date(e);if(\"string\"==typeof e&&!/Z$/i.test(e)){var r=e.match(h);if(r){var i=r[2]-1||0,s=(r[7]||\"0\").substring(0,3);return n?new Date(Date.UTC(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)):new Date(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)}}return new Date(e)}(t),this.$x=t.x||{},this.init()},$.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds()},$.$utils=function(){return g},$.isValid=function(){return!(\"Invalid Date\"===this.$d.toString())},$.isSame=function(t,e){var n=v(t);return this.startOf(e)<=n&&n<=this.endOf(e)},$.isAfter=function(t,e){return v(t)<this.startOf(e)},$.isBefore=function(t,e){return this.endOf(e)<v(t)},$.$g=function(t,e,n){return g.u(t)?this[e]:this.set(n,t)},$.unix=function(){return Math.floor(this.valueOf()/1e3)},$.valueOf=function(){return this.$d.getTime()},$.startOf=function(t,a){var h=this,c=!!g.u(a)||a,d=g.p(t),$=function(t,e){var n=g.w(h.$u?Date.UTC(h.$y,e,t):new Date(h.$y,e,t),h);return c?n:n.endOf(i)},l=function(t,e){return g.w(h.toDate()[t].apply(h.toDate(\"s\"),(c?[0,0,0,0]:[23,59,59,999]).slice(e)),h)},y=this.$W,M=this.$M,m=this.$D,D=\"set\"+(this.$u?\"UTC\":\"\");switch(d){case o:return c?$(1,0):$(31,11);case u:return c?$(1,M):$(0,M+1);case s:var v=this.$locale().weekStart||0,S=(y<v?y+7:y)-v;return $(c?m-S:m+(6-S),M);case i:case f:return l(D+\"Hours\",0);case r:return l(D+\"Minutes\",1);case n:return l(D+\"Seconds\",2);case e:return l(D+\"Milliseconds\",3);default:return this.clone()}},$.endOf=function(t){return this.startOf(t,!1)},$.$set=function(s,a){var h,c=g.p(s),d=\"set\"+(this.$u?\"UTC\":\"\"),$=(h={},h[i]=d+\"Date\",h[f]=d+\"Date\",h[u]=d+\"Month\",h[o]=d+\"FullYear\",h[r]=d+\"Hours\",h[n]=d+\"Minutes\",h[e]=d+\"Seconds\",h[t]=d+\"Milliseconds\",h)[c],l=c===i?this.$D+(a-this.$W):a;if(c===u||c===o){var y=this.clone().set(f,1);y.$d[$](l),y.init(),this.$d=y.set(f,Math.min(this.$D,y.daysInMonth())).$d}else $&&this.$d[$](l);return this.init(),this},$.set=function(t,e){return this.clone().$set(t,e)},$.get=function(t){return this[g.p(t)]()},$.add=function(t,a){var f,h=this;t=Number(t);var c=g.p(a),d=function(e){var n=v(h);return g.w(n.date(n.date()+Math.round(e*t)),h)};if(c===u)return this.set(u,this.$M+t);if(c===o)return this.set(o,this.$y+t);if(c===i)return d(1);if(c===s)return d(7);var $=(f={},f[n]=6e4,f[r]=36e5,f[e]=1e3,f)[c]||1,l=this.$d.getTime()+t*$;return g.w(l,this)},$.subtract=function(t,e){return this.add(-1*t,e)},$.format=function(t){var e=this;if(!this.isValid())return\"Invalid Date\";var n=t||\"YYYY-MM-DDTHH:mm:ssZ\",r=g.z(this),i=this.$locale(),s=this.$H,u=this.$m,a=this.$M,o=i.weekdays,f=i.months,h=function(t,r,i,s){return t&&(t[r]||t(e,n))||i[r].substr(0,s)},d=function(t){return g.s(s%12||12,t,\"0\")},$=i.meridiem||function(t,e,n){var r=t<12?\"AM\":\"PM\";return n?r.toLowerCase():r},l={YY:String(this.$y).slice(-2),YYYY:this.$y,M:a+1,MM:g.s(a+1,2,\"0\"),MMM:h(i.monthsShort,a,f,3),MMMM:h(f,a),D:this.$D,DD:g.s(this.$D,2,\"0\"),d:String(this.$W),dd:h(i.weekdaysMin,this.$W,o,2),ddd:h(i.weekdaysShort,this.$W,o,3),dddd:o[this.$W],H:String(s),HH:g.s(s,2,\"0\"),h:d(1),hh:d(2),a:$(s,u,!0),A:$(s,u,!1),m:String(u),mm:g.s(u,2,\"0\"),s:String(this.$s),ss:g.s(this.$s,2,\"0\"),SSS:g.s(this.$ms,3,\"0\"),Z:r};return n.replace(c,function(t,e){return e||l[t]||r.replace(\":\",\"\")})},$.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},$.diff=function(t,f,h){var c,d=g.p(f),$=v(t),l=6e4*($.utcOffset()-this.utcOffset()),y=this-$,M=g.m(this,$);return M=(c={},c[o]=M/12,c[u]=M,c[a]=M/3,c[s]=(y-l)/6048e5,c[i]=(y-l)/864e5,c[r]=y/36e5,c[n]=y/6e4,c[e]=y/1e3,c)[d]||y,h?M:g.a(M)},$.daysInMonth=function(){return this.endOf(u).$D},$.$locale=function(){return M[this.$L]},$.locale=function(t,e){if(!t)return this.$L;var n=this.clone(),r=D(t,e,!0);return r&&(n.$L=r),n},$.clone=function(){return g.w(this.$d,this)},$.toDate=function(){return new Date(this.valueOf())},$.toJSON=function(){return this.isValid()?this.toISOString():null},$.toISOString=function(){return this.$d.toISOString()},$.toString=function(){return this.$d.toUTCString()},d}(),p=S.prototype;return v.prototype=p,[[\"$ms\",t],[\"$s\",e],[\"$m\",n],[\"$H\",r],[\"$W\",i],[\"$M\",u],[\"$y\",o],[\"$D\",f]].forEach(function(t){p[t[1]]=function(e){return this.$g(e,t[0],t[1])}}),v.extend=function(t,e){return t.$i||(t(e,S,v),t.$i=!0),v},v.locale=D,v.isDayjs=m,v.unix=function(t){return v(1e3*t)},v.en=M[y],v.Ls=M,v.p={},v});\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):t.dayjs_plugin_utc=i()}(this,function(){\"use strict\";return function(t,i,e){var s=i.prototype;e.utc=function(t){return new i({date:t,utc:!0,args:arguments})},s.utc=function(t){var i=e(this.toDate(),{locale:this.$L,utc:!0});return t?i.add(this.utcOffset(),\"minute\"):i},s.local=function(){return e(this.toDate(),{locale:this.$L,utc:!1})};var f=s.parse;s.parse=function(t){t.utc&&(this.$u=!0),this.$utils().u(t.$offset)||(this.$offset=t.$offset),f.call(this,t)};var n=s.init;s.init=function(){if(this.$u){var t=this.$d;this.$y=t.getUTCFullYear(),this.$M=t.getUTCMonth(),this.$D=t.getUTCDate(),this.$W=t.getUTCDay(),this.$H=t.getUTCHours(),this.$m=t.getUTCMinutes(),this.$s=t.getUTCSeconds(),this.$ms=t.getUTCMilliseconds()}else n.call(this)};var u=s.utcOffset;s.utcOffset=function(t,i){var e=this.$utils().u;if(e(t))return this.$u?0:e(this.$offset)?u.call(this):this.$offset;var s=Math.abs(t)<=16?60*t:t,f=this;if(i)return f.$offset=s,f.$u=0===t,f;if(0!==t){var n=this.$u?this.toDate().getTimezoneOffset():-1*this.utcOffset();(f=this.local().add(s+n,\"minute\")).$offset=s,f.$x.$localOffset=n}else f=this.utc();return f};var o=s.format;s.format=function(t){var i=t||(this.$u?\"YYYY-MM-DDTHH:mm:ss[Z]\":\"\");return o.call(this,i)},s.valueOf=function(){var t=this.$utils().u(this.$offset)?0:this.$offset+(this.$x.$localOffset||(new Date).getTimezoneOffset());return this.$d.valueOf()-6e4*t},s.isUTC=function(){return!!this.$u},s.toISOString=function(){return this.toDate().toISOString()},s.toString=function(){return this.toDate().toUTCString()};var r=s.toDate;s.toDate=function(t){return\"s\"===t&&this.$offset?e(this.format(\"YYYY-MM-DD HH:mm:ss:SSS\")).toDate():r.call(this)};var a=s.diff;s.diff=function(t,i,s){if(t&&this.$u===t.$u)return a.call(this,t,i,s);var f=this.local(),n=e(t).local();return a.call(f,n,i,s)}}});\n","/*!\n * Chart.js v3.2.0\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\nconst requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\nfunction throttled(fn, thisArg, updateFn) {\n  const updateArgs = updateFn || ((args) => Array.prototype.slice.call(args));\n  let ticking = false;\n  let args = [];\n  return function(...rest) {\n    args = updateArgs(rest);\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\nfunction debounce(fn, delay) {\n  let timeout;\n  return function() {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay);\n    } else {\n      fn();\n    }\n    return delay;\n  };\n}\nconst _toLeftRightCenter = (align) => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\nconst _alignStartEnd = (align, start, end) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\nconst _textX = (align, left, right) => align === 'right' ? right : align === 'center' ? (left + right) / 2 : left;\n\nfunction noop() {}\nconst uid = (function() {\n  let id = 0;\n  return function() {\n    return id++;\n  };\n}());\nfunction isNullOrUndef(value) {\n  return value === null || typeof value === 'undefined';\n}\nfunction isArray(value) {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\nfunction isObject(value) {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\nconst isNumberFinite = (value) => (typeof value === 'number' || value instanceof Number) && isFinite(+value);\nfunction finiteOrDefault(value, defaultValue) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\nfunction valueOrDefault(value, defaultValue) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : value / dimension;\nconst toDimension = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\nfunction callback(fn, args, thisArg) {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n  let i, len, keys;\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\nfunction _elementsEqual(a0, a1) {\n  let i, ilen, v0, v1;\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction clone$1(source) {\n  if (isArray(source)) {\n    return source.map(clone$1);\n  }\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone$1(source[keys[k]]);\n    }\n    return target;\n  }\n  return source;\n}\nfunction isValidKey(key) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\nfunction _merger(key, target, source, options) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone$1(sval);\n  }\n}\nfunction merge(target, source, options) {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n  if (!isObject(target)) {\n    return target;\n  }\n  options = options || {};\n  const merger = options.merger || _merger;\n  for (let i = 0; i < ilen; ++i) {\n    source = sources[i];\n    if (!isObject(source)) {\n      continue;\n    }\n    const keys = Object.keys(source);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, source, options);\n    }\n  }\n  return target;\n}\nfunction mergeIf(target, source) {\n  return merge(target, source, {merger: _mergerIf});\n}\nfunction _mergerIf(key, target, source) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone$1(sval);\n  }\n}\nfunction _deprecated(scope, value, previous, current) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n\t\t\t'\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\nconst emptyString = '';\nconst dot = '.';\nfunction indexOfDotOrLength(key, start) {\n  const idx = key.indexOf(dot, start);\n  return idx === -1 ? key.length : idx;\n}\nfunction resolveObjectKey(obj, key) {\n  if (key === emptyString) {\n    return obj;\n  }\n  let pos = 0;\n  let idx = indexOfDotOrLength(key, pos);\n  while (obj && idx > pos) {\n    obj = obj[key.substr(pos, idx - pos)];\n    pos = idx + 1;\n    idx = indexOfDotOrLength(key, pos);\n  }\n  return obj;\n}\nfunction _capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value) => typeof value !== 'undefined';\nconst isFunction = (value) => typeof value === 'function';\nconst setsEqual = (a, b) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n  return true;\n};\n\nconst PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction niceNum(range) {\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\nfunction _factorize(value) {\n  const result = [];\n  const sqrt = Math.sqrt(value);\n  let i;\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) {\n    result.push(sqrt);\n  }\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostEquals(x, y, epsilon) {\n  return Math.abs(x - y) < epsilon;\n}\nfunction almostWhole(x, epsilon) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\nfunction _setMinAndMaxByKey(array, target, property) {\n  let i, ilen, value;\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\nfunction toRadians(degrees) {\n  return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n  return radians * (180 / PI);\n}\nfunction _decimalPlaces(x) {\n  if (!isNumberFinite(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n  if (angle < (-0.5 * PI)) {\n    angle += TAU;\n  }\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\nfunction _angleDiff(a, b) {\n  return (a - b + PITAU) % TAU - PI;\n}\nfunction _normalizeAngle(a) {\n  return (a % TAU + TAU) % TAU;\n}\nfunction _angleBetween(angle, start, end) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\nfunction _limitValue(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\nfunction _int16Range(value) {\n  return _limitValue(value, -32768, 32767);\n}\n\nconst atEdge = (t) => t === 0 || t === 1;\nconst elasticIn = (t, s, p) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\nconst effects = {\n  linear: t => t,\n  easeInQuad: t => t * t,\n  easeOutQuad: t => -t * (t - 2),\n  easeInOutQuad: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n  easeInCubic: t => t * t * t,\n  easeOutCubic: t => (t -= 1) * t * t + 1,\n  easeInOutCubic: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n  easeInQuart: t => t * t * t * t,\n  easeOutQuart: t => -((t -= 1) * t * t * t - 1),\n  easeInOutQuart: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n  easeInQuint: t => t * t * t * t * t,\n  easeOutQuint: t => (t -= 1) * t * t * t * t + 1,\n  easeInOutQuint: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n  easeInSine: t => -Math.cos(t * HALF_PI) + 1,\n  easeOutSine: t => Math.sin(t * HALF_PI),\n  easeInOutSine: t => -0.5 * (Math.cos(PI * t) - 1),\n  easeInExpo: t => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n  easeOutExpo: t => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n  easeInOutExpo: t => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n  easeInCirc: t => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n  easeOutCirc: t => Math.sqrt(1 - (t -= 1) * t),\n  easeInOutCirc: t => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n  easeInElastic: t => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n  easeOutElastic: t => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n  easeInOutElastic(t) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n  easeInBack(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack(t) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack(t) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n  easeInBounce: t => 1 - effects.easeOutBounce(1 - t),\n  easeOutBounce(t) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n  easeInOutBounce: t => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n};\n\n/*!\n * @kurkle/color v0.1.9\n * https://github.com/kurkle/color#readme\n * (c) 2020 Jukka Kurkela\n * Released under the MIT License\n */\nconst map = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = '0123456789ABCDEF';\nconst h1 = (b) => hex[b & 0xF];\nconst h2 = (b) => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = (b) => (((b & 0xF0) >> 4) === (b & 0xF));\nfunction isShort(v) {\n\treturn eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\n}\nfunction hexParse(str) {\n\tvar len = str.length;\n\tvar ret;\n\tif (str[0] === '#') {\n\t\tif (len === 4 || len === 5) {\n\t\t\tret = {\n\t\t\t\tr: 255 & map[str[1]] * 17,\n\t\t\t\tg: 255 & map[str[2]] * 17,\n\t\t\t\tb: 255 & map[str[3]] * 17,\n\t\t\t\ta: len === 5 ? map[str[4]] * 17 : 255\n\t\t\t};\n\t\t} else if (len === 7 || len === 9) {\n\t\t\tret = {\n\t\t\t\tr: map[str[1]] << 4 | map[str[2]],\n\t\t\t\tg: map[str[3]] << 4 | map[str[4]],\n\t\t\t\tb: map[str[5]] << 4 | map[str[6]],\n\t\t\t\ta: len === 9 ? (map[str[7]] << 4 | map[str[8]]) : 255\n\t\t\t};\n\t\t}\n\t}\n\treturn ret;\n}\nfunction hexString(v) {\n\tvar f = isShort(v) ? h1 : h2;\n\treturn v\n\t\t? '#' + f(v.r) + f(v.g) + f(v.b) + (v.a < 255 ? f(v.a) : '')\n\t\t: v;\n}\nfunction round(v) {\n\treturn v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n\treturn lim(round(v * 2.55), 0, 255);\n}\nfunction n2b(v) {\n\treturn lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n\treturn lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n\treturn lim(round(v * 100), 0, 100);\n}\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n\tconst m = RGB_RE.exec(str);\n\tlet a = 255;\n\tlet r, g, b;\n\tif (!m) {\n\t\treturn;\n\t}\n\tif (m[7] !== r) {\n\t\tconst v = +m[7];\n\t\ta = 255 & (m[8] ? p2b(v) : v * 255);\n\t}\n\tr = +m[1];\n\tg = +m[3];\n\tb = +m[5];\n\tr = 255 & (m[2] ? p2b(r) : r);\n\tg = 255 & (m[4] ? p2b(g) : g);\n\tb = 255 & (m[6] ? p2b(b) : b);\n\treturn {\n\t\tr: r,\n\t\tg: g,\n\t\tb: b,\n\t\ta: a\n\t};\n}\nfunction rgbString(v) {\n\treturn v && (\n\t\tv.a < 255\n\t\t\t? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n\t\t\t: `rgb(${v.r}, ${v.g}, ${v.b})`\n\t);\n}\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n\tconst a = s * Math.min(l, 1 - l);\n\tconst f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n\treturn [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n\tconst f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n\treturn [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n\tconst rgb = hsl2rgbn(h, 1, 0.5);\n\tlet i;\n\tif (w + b > 1) {\n\t\ti = 1 / (w + b);\n\t\tw *= i;\n\t\tb *= i;\n\t}\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] *= 1 - w - b;\n\t\trgb[i] += w;\n\t}\n\treturn rgb;\n}\nfunction rgb2hsl(v) {\n\tconst range = 255;\n\tconst r = v.r / range;\n\tconst g = v.g / range;\n\tconst b = v.b / range;\n\tconst max = Math.max(r, g, b);\n\tconst min = Math.min(r, g, b);\n\tconst l = (max + min) / 2;\n\tlet h, s, d;\n\tif (max !== min) {\n\t\td = max - min;\n\t\ts = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\t\th = max === r\n\t\t\t? ((g - b) / d) + (g < b ? 6 : 0)\n\t\t\t: max === g\n\t\t\t\t? (b - r) / d + 2\n\t\t\t\t: (r - g) / d + 4;\n\t\th = h * 60 + 0.5;\n\t}\n\treturn [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n\treturn (\n\t\tArray.isArray(a)\n\t\t\t? f(a[0], a[1], a[2])\n\t\t\t: f(a, b, c)\n\t).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n\treturn calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n\treturn calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n\treturn calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n\treturn (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n\tconst m = HUE_RE.exec(str);\n\tlet a = 255;\n\tlet v;\n\tif (!m) {\n\t\treturn;\n\t}\n\tif (m[5] !== v) {\n\t\ta = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n\t}\n\tconst h = hue(+m[2]);\n\tconst p1 = +m[3] / 100;\n\tconst p2 = +m[4] / 100;\n\tif (m[1] === 'hwb') {\n\t\tv = hwb2rgb(h, p1, p2);\n\t} else if (m[1] === 'hsv') {\n\t\tv = hsv2rgb(h, p1, p2);\n\t} else {\n\t\tv = hsl2rgb(h, p1, p2);\n\t}\n\treturn {\n\t\tr: v[0],\n\t\tg: v[1],\n\t\tb: v[2],\n\t\ta: a\n\t};\n}\nfunction rotate(v, deg) {\n\tvar h = rgb2hsl(v);\n\th[0] = hue(h[0] + deg);\n\th = hsl2rgb(h);\n\tv.r = h[0];\n\tv.g = h[1];\n\tv.b = h[2];\n}\nfunction hslString(v) {\n\tif (!v) {\n\t\treturn;\n\t}\n\tconst a = rgb2hsl(v);\n\tconst h = a[0];\n\tconst s = n2p(a[1]);\n\tconst l = n2p(a[2]);\n\treturn v.a < 255\n\t\t? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n\t\t: `hsl(${h}, ${s}%, ${l}%)`;\n}\nconst map$1 = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n\tconst unpacked = {};\n\tconst keys = Object.keys(names);\n\tconst tkeys = Object.keys(map$1);\n\tlet i, j, k, ok, nk;\n\tfor (i = 0; i < keys.length; i++) {\n\t\tok = nk = keys[i];\n\t\tfor (j = 0; j < tkeys.length; j++) {\n\t\t\tk = tkeys[j];\n\t\t\tnk = nk.replace(k, map$1[k]);\n\t\t}\n\t\tk = parseInt(names[ok], 16);\n\t\tunpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n\t}\n\treturn unpacked;\n}\nlet names$1;\nfunction nameParse(str) {\n\tif (!names$1) {\n\t\tnames$1 = unpack();\n\t\tnames$1.transparent = [0, 0, 0, 0];\n\t}\n\tconst a = names$1[str.toLowerCase()];\n\treturn a && {\n\t\tr: a[0],\n\t\tg: a[1],\n\t\tb: a[2],\n\t\ta: a.length === 4 ? a[3] : 255\n\t};\n}\nfunction modHSL(v, i, ratio) {\n\tif (v) {\n\t\tlet tmp = rgb2hsl(v);\n\t\ttmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n\t\ttmp = hsl2rgb(tmp);\n\t\tv.r = tmp[0];\n\t\tv.g = tmp[1];\n\t\tv.b = tmp[2];\n\t}\n}\nfunction clone(v, proto) {\n\treturn v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n\tvar v = {r: 0, g: 0, b: 0, a: 255};\n\tif (Array.isArray(input)) {\n\t\tif (input.length >= 3) {\n\t\t\tv = {r: input[0], g: input[1], b: input[2], a: 255};\n\t\t\tif (input.length > 3) {\n\t\t\t\tv.a = n2b(input[3]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tv = clone(input, {r: 0, g: 0, b: 0, a: 1});\n\t\tv.a = n2b(v.a);\n\t}\n\treturn v;\n}\nfunction functionParse(str) {\n\tif (str.charAt(0) === 'r') {\n\t\treturn rgbParse(str);\n\t}\n\treturn hueParse(str);\n}\nclass Color {\n\tconstructor(input) {\n\t\tif (input instanceof Color) {\n\t\t\treturn input;\n\t\t}\n\t\tconst type = typeof input;\n\t\tlet v;\n\t\tif (type === 'object') {\n\t\t\tv = fromObject(input);\n\t\t} else if (type === 'string') {\n\t\t\tv = hexParse(input) || nameParse(input) || functionParse(input);\n\t\t}\n\t\tthis._rgb = v;\n\t\tthis._valid = !!v;\n\t}\n\tget valid() {\n\t\treturn this._valid;\n\t}\n\tget rgb() {\n\t\tvar v = clone(this._rgb);\n\t\tif (v) {\n\t\t\tv.a = b2n(v.a);\n\t\t}\n\t\treturn v;\n\t}\n\tset rgb(obj) {\n\t\tthis._rgb = fromObject(obj);\n\t}\n\trgbString() {\n\t\treturn this._valid ? rgbString(this._rgb) : this._rgb;\n\t}\n\thexString() {\n\t\treturn this._valid ? hexString(this._rgb) : this._rgb;\n\t}\n\thslString() {\n\t\treturn this._valid ? hslString(this._rgb) : this._rgb;\n\t}\n\tmix(color, weight) {\n\t\tconst me = this;\n\t\tif (color) {\n\t\t\tconst c1 = me.rgb;\n\t\t\tconst c2 = color.rgb;\n\t\t\tlet w2;\n\t\t\tconst p = weight === w2 ? 0.5 : weight;\n\t\t\tconst w = 2 * p - 1;\n\t\t\tconst a = c1.a - c2.a;\n\t\t\tconst w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\t\tw2 = 1 - w1;\n\t\t\tc1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n\t\t\tc1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n\t\t\tc1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n\t\t\tc1.a = p * c1.a + (1 - p) * c2.a;\n\t\t\tme.rgb = c1;\n\t\t}\n\t\treturn me;\n\t}\n\tclone() {\n\t\treturn new Color(this.rgb);\n\t}\n\talpha(a) {\n\t\tthis._rgb.a = n2b(a);\n\t\treturn this;\n\t}\n\tclearer(ratio) {\n\t\tconst rgb = this._rgb;\n\t\trgb.a *= 1 - ratio;\n\t\treturn this;\n\t}\n\tgreyscale() {\n\t\tconst rgb = this._rgb;\n\t\tconst val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n\t\trgb.r = rgb.g = rgb.b = val;\n\t\treturn this;\n\t}\n\topaquer(ratio) {\n\t\tconst rgb = this._rgb;\n\t\trgb.a *= 1 + ratio;\n\t\treturn this;\n\t}\n\tnegate() {\n\t\tconst v = this._rgb;\n\t\tv.r = 255 - v.r;\n\t\tv.g = 255 - v.g;\n\t\tv.b = 255 - v.b;\n\t\treturn this;\n\t}\n\tlighten(ratio) {\n\t\tmodHSL(this._rgb, 2, ratio);\n\t\treturn this;\n\t}\n\tdarken(ratio) {\n\t\tmodHSL(this._rgb, 2, -ratio);\n\t\treturn this;\n\t}\n\tsaturate(ratio) {\n\t\tmodHSL(this._rgb, 1, ratio);\n\t\treturn this;\n\t}\n\tdesaturate(ratio) {\n\t\tmodHSL(this._rgb, 1, -ratio);\n\t\treturn this;\n\t}\n\trotate(deg) {\n\t\trotate(this._rgb, deg);\n\t\treturn this;\n\t}\n}\nfunction index_esm(input) {\n\treturn new Color(input);\n}\n\nconst isPatternOrGradient = (value) => value instanceof CanvasGradient || value instanceof CanvasPattern;\nfunction color(value) {\n  return isPatternOrGradient(value) ? value : index_esm(value);\n}\nfunction getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : index_esm(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\nfunction getScope$1(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope$1(root, scope), values);\n  }\n  return merge(getScope$1(root, ''), scope);\n}\nclass Defaults {\n  constructor(_descriptors) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.describe(_descriptors);\n  }\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n  get(scope) {\n    return getScope$1(this, scope);\n  }\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope$1(this, scope);\n    const targetScopeObject = getScope$1(this, targetScope);\n    const privateName = '_' + name;\n    Object.defineProperties(scopeObject, {\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n}\nvar defaults = new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n});\n\nfunction toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\nfunction _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n  ctx.save();\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n  ctx.restore();\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\nfunction _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\nfunction clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n  ctx.save();\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n  let type, xOffset, yOffset, size, cornerRadius;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n  ctx.beginPath();\n  switch (style) {\n  default:\n    ctx.arc(x, y, radius, 0, TAU);\n    ctx.closePath();\n    break;\n  case 'triangle':\n    ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      ctx.rect(x - size, y - size, 2 * size, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n  case 'rectRot':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n  case 'cross':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'star':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    rad += QUARTER_PI;\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'line':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n    break;\n  }\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\nfunction _isPointInArea(point, area, margin) {\n  margin = margin || 0.5;\n  return point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\nfunction unclipArea(ctx) {\n  ctx.restore();\n}\nfunction _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\nfunction _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\nfunction renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n  ctx.save();\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n  ctx.font = font.string;\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n    ctx.fillText(line, x, y, opts.maxWidth);\n    if (opts.strikethrough || opts.underline) {\n      const metrics = ctx.measureText(line);\n      const left = x - metrics.actualBoundingBoxLeft;\n      const right = x + metrics.actualBoundingBoxRight;\n      const top = y - metrics.actualBoundingBoxAscent;\n      const bottom = y + metrics.actualBoundingBoxDescent;\n      const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n      ctx.strokeStyle = ctx.fillStyle;\n      ctx.beginPath();\n      ctx.lineWidth = opts.decorationWidth || 2;\n      ctx.moveTo(left, yDecoration);\n      ctx.lineTo(right, yDecoration);\n      ctx.stroke();\n    }\n    y += font.lineHeight;\n  }\n  ctx.restore();\n}\nfunction addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n  ctx.lineTo(x + w, y + radius.topRight);\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n  ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\nconst FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\nfunction toLineHeight(value, size) {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n  value = +matches[2];\n  switch (matches[3]) {\n  case 'px':\n    return value;\n  case '%':\n    value /= 100;\n    break;\n  }\n  return size * value;\n}\nconst numberOrZero = v => +v || 0;\nfunction _readValueToProps(value, props) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\nfunction toTRBL(value) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\nfunction toTRBLCorners(value) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\nfunction toPadding(value) {\n  const obj = toTRBL(value);\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n  return obj;\n}\nfunction toFont(options, fallback) {\n  options = options || {};\n  fallback = fallback || defaults.font;\n  let size = valueOrDefault(options.size, fallback.size);\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = '';\n  }\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n  font.string = toFontString(font);\n  return font;\n}\nfunction resolve(inputs, context, index, info) {\n  let cacheable = true;\n  let i, ilen, value;\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\nfunction _addGrace(minmax, grace) {\n  const {min, max} = minmax;\n  return {\n    min: min - Math.abs(toDimension(grace, min)),\n    max: max + toDimension(grace, max)\n  };\n}\n\nfunction _lookup(table, value, cmp) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid;\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n  return {lo, hi};\n}\nconst _lookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] < value);\nconst _rlookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] >= value);\nfunction _filterBetween(values, min, max) {\n  let start = 0;\n  let end = values.length;\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\nfunction listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n        return res;\n      }\n    });\n  });\n}\nfunction unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n  if (listeners.length > 0) {\n    return;\n  }\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n  delete array._chartjs;\n}\nfunction _arrayUnique(items) {\n  const set = new Set();\n  let i, ilen;\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n  if (set.size === ilen) {\n    return items;\n  }\n  const result = [];\n  set.forEach(item => {\n    result.push(item);\n  });\n  return result;\n}\n\nfunction _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete target._keys;\n      delete scopes[0][prop];\n      return true;\n    },\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      storage[prop] = value;\n      delete target[prop];\n      delete target._keys;\n      return true;\n    }\n  });\n}\nfunction _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete proxy[prop];\n      return true;\n    },\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n    set(target, prop, value) {\n      proxy[prop] = value;\n      delete target[prop];\n      return true;\n    }\n  });\n}\nfunction _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters';\nfunction _cached(target, prop, resolve) {\n  let value = target[prop];\n  if (defined(value)) {\n    return value;\n  }\n  value = resolve();\n  if (defined(value)) {\n    target[prop] = value;\n  }\n  return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop];\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + [..._stack].join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (isObject(value)) {\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, scope);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      return null;\n    }\n  }\n  return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver([...set], [''], rootScopes, fallback, () => {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n      parent[prop] = {};\n    }\n    return parent[prop];\n  });\n}\nfunction addScopesFromKey(set, allScopes, key, fallback) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback);\n  }\n  return key;\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return [...set];\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i) => i < points.length && !points[i].skip && points[i];\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n  const fa = t * s01;\n  const fb = t * s12;\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\nfunction monotoneAdjust(points, deltaK, mK) {\n  const pointsLen = points.length;\n  let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\nfunction monotoneCompute(points, mK) {\n  const pointsLen = points.length;\n  let deltaX, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    const {x, y} = pointCurrent;\n    if (pointBefore) {\n      deltaX = (x - pointBefore.x) / 3;\n      pointCurrent.cp1x = x - deltaX;\n      pointCurrent.cp1y = y - deltaX * mK[i];\n    }\n    if (pointAfter) {\n      deltaX = (pointAfter.x - x) / 3;\n      pointCurrent.cp2x = x + deltaX;\n      pointCurrent.cp2y = y + deltaX * mK[i];\n    }\n  }\n}\nfunction splineCurveMonotone(points) {\n  const pointsLen = points.length;\n  const deltaK = Array(pointsLen).fill(0);\n  const mK = Array(pointsLen);\n  let i, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    if (pointAfter) {\n      const slopeDeltaX = (pointAfter.x - pointCurrent.x);\n      deltaK[i] = slopeDeltaX !== 0 ? (pointAfter.y - pointCurrent.y) / slopeDeltaX : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n      : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n      : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n  monotoneAdjust(points, deltaK, mK);\n  monotoneCompute(points, mK);\n}\nfunction capControlPoint(pt, min, max) {\n  return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\nfunction _updateBezierControlPoints(points, options, area, loop) {\n  let i, ilen, point, controlPoints;\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n\nfunction _getParentNode(domNode) {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = parent.host;\n  }\n  return parent;\n}\nfunction parseMaxStyle(styleValue, node, parentProperty) {\n  let valueInPixels;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n    if (styleValue.indexOf('%') !== -1) {\n      valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n  return valueInPixels;\n}\nconst getComputedStyle = (element) => window.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n  return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles, style, suffix) {\n  const result = {};\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\nconst useOffsetPos = (x, y, target) => (x > 0 || y > 0) && (!target || !target.shadowRoot);\nfunction getCanvasPosition(evt, canvas) {\n  const e = evt.native || evt;\n  const touches = e.touches;\n  const source = touches && touches.length ? touches[0] : e;\n  const {offsetX, offsetY} = source;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\nfunction getRelativePosition(evt, chart) {\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(evt, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\nfunction getContainerSize(canvas, width, height) {\n  let maxWidth, maxHeight;\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect();\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\nconst round1 = v => Math.round(v * 10) / 10;\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    height = round1(width / 2);\n  }\n  return {\n    width,\n    height\n  };\n}\nfunction retinaScale(chart, forceRatio, forceStyle) {\n  const pixelRatio = chart.currentDevicePixelRatio = forceRatio || 1;\n  const {canvas, width, height} = chart;\n  canvas.height = height * pixelRatio;\n  canvas.width = width * pixelRatio;\n  chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = height + 'px';\n    canvas.style.width = width + 'px';\n  }\n}\nconst supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() {\n        passiveSupported = true;\n        return false;\n      }\n    };\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n  }\n  return passiveSupported;\n}());\nfunction readUsedSize(element, property) {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n\nfunction _pointInLine(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\nfunction _steppedInterpolation(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n    : mode === 'after' ? t < 1 ? p1.y : p2.y\n    : t > 0 ? p2.y : p1.y\n  };\n}\nfunction _bezierInterpolation(p1, p2, t, mode) {\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\nfunction formatNumber(num, locale, options) {\n  return getNumberFormat(locale, options).format(num);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\nconst getLeftToRightAdapter = function() {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) {\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) {\n      return x;\n    },\n  };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n  let style, original;\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n    style.setProperty('direction', direction, 'important');\n    ctx.prevTextDirection = original;\n  }\n}\nfunction restoreTextDirection(ctx, original) {\n  if (original !== undefined) {\n    delete ctx.prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: (n, s, e) => n >= Math.min(s, e) && n <= Math.max(e, s),\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  let {start, end, loop} = segment;\n  let i, ilen;\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\nfunction _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n    if (point.skip) {\n      continue;\n    }\n    value = normalize(point[property]);\n    inside = between(value, startBound, endBound);\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n  return result;\n}\nfunction _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n  if (loop && !spanGaps) {\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n  while (start < count && points[start].skip) {\n    start++;\n  }\n  start %= count;\n  if (loop) {\n    end += start;\n  }\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n  end %= count;\n  return {start, end};\n}\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n  return result;\n}\nfunction _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n  if (!count) {\n    return [];\n  }\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n  if (spanGaps === true) {\n    return splitByStyles([{start, end, loop}], points, segmentOptions);\n  }\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\nfunction splitByStyles(segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(segments, points, segmentOptions);\n}\nfunction doSplitByStyles(segments, points, segmentOptions) {\n  const count = points.length;\n  const result = [];\n  let start = segments[0].start;\n  let i = start;\n  for (const segment of segments) {\n    let prevStyle, style;\n    let prev = points[start % count];\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext({type: 'segment', p0: prev, p1: pt}));\n      if (styleChanged(style, prevStyle)) {\n        result.push({start: start, end: i - 1, loop: segment.loop, style: prevStyle});\n        prevStyle = style;\n        start = i - 1;\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      result.push({start, end: i - 1, loop: segment.loop, style});\n      start = i - 1;\n    }\n  }\n  return result;\n}\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nexport { merge as $, _isPointInArea as A, _rlookupByKey as B, toPadding as C, each as D, getMaximumSize as E, _getParentNode as F, readUsedSize as G, HALF_PI as H, throttled as I, supportsEventListenerOptions as J, log10 as K, _factorize as L, finiteOrDefault as M, callback as N, _addGrace as O, PI as P, toDegrees as Q, _measureText as R, _int16Range as S, TAU as T, _alignPixel as U, renderText as V, toFont as W, _toLeftRightCenter as X, _alignStartEnd as Y, overrides as Z, _arrayUnique as _, resolve as a, _capitalize as a0, descriptors as a1, isFunction as a2, _attachContext as a3, _createResolver as a4, _descriptors as a5, mergeIf as a6, uid as a7, debounce as a8, retinaScale as a9, niceNum as aA, almostWhole as aB, almostEquals as aC, _decimalPlaces as aD, _longestText as aE, _filterBetween as aF, _lookup as aG, getHoverColor as aH, clone$1 as aI, _merger as aJ, _mergerIf as aK, _deprecated as aL, toFontString as aM, splineCurve as aN, splineCurveMonotone as aO, getStyle as aP, fontString as aQ, toLineHeight as aR, PITAU as aS, INFINITY as aT, RAD_PER_DEG as aU, QUARTER_PI as aV, TWO_THIRDS_PI as aW, _angleDiff as aX, clearCanvas as aa, setsEqual as ab, _elementsEqual as ac, getAngleFromPoint as ad, _readValueToProps as ae, _updateBezierControlPoints as af, _computeSegments as ag, _boundSegments as ah, _steppedInterpolation as ai, _bezierInterpolation as aj, _pointInLine as ak, _steppedLineTo as al, _bezierCurveTo as am, drawPoint as an, addRoundedRectPath as ao, toTRBL as ap, toTRBLCorners as aq, _boundSegment as ar, _normalizeAngle as as, getRtlAdapter as at, overrideTextDirection as au, _textX as av, restoreTextDirection as aw, noop as ax, distanceBetweenPoints as ay, _setMinAndMaxByKey as az, isArray as b, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, isNullOrUndef as j, clipArea as k, listenArrayEvents as l, unclipArea as m, toPercentage as n, toDimension as o, formatNumber as p, _angleBetween as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, isNumber as w, _limitValue as x, _lookupByKey as y, getRelativePosition as z };\n","/*!\n * Chart.js v3.2.0\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, b as isArray, d as defaults, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as isNullOrUndef, k as clipArea, m as unclipArea, _ as _arrayUnique, t as toRadians, n as toPercentage, o as toDimension, T as TAU, p as formatNumber, q as _angleBetween, H as HALF_PI, P as PI, w as isNumber, x as _limitValue, y as _lookupByKey, z as getRelativePosition$1, A as _isPointInArea, B as _rlookupByKey, C as toPadding, D as each, E as getMaximumSize, F as _getParentNode, G as readUsedSize, I as throttled, J as supportsEventListenerOptions, K as log10, L as _factorize, M as finiteOrDefault, N as callback, O as _addGrace, Q as toDegrees, R as _measureText, S as _int16Range, U as _alignPixel, V as renderText, W as toFont, X as _toLeftRightCenter, Y as _alignStartEnd, Z as overrides, $ as merge, a0 as _capitalize, a1 as descriptors, a2 as isFunction, a3 as _attachContext, a4 as _createResolver, a5 as _descriptors, a6 as mergeIf, a7 as uid, a8 as debounce, a9 as retinaScale, aa as clearCanvas, ab as setsEqual, ac as _elementsEqual, ad as getAngleFromPoint, ae as _readValueToProps, af as _updateBezierControlPoints, ag as _computeSegments, ah as _boundSegments, ai as _steppedInterpolation, aj as _bezierInterpolation, ak as _pointInLine, al as _steppedLineTo, am as _bezierCurveTo, an as drawPoint, ao as addRoundedRectPath, ap as toTRBL, aq as toTRBLCorners, ar as _boundSegment, as as _normalizeAngle, at as getRtlAdapter, au as overrideTextDirection, av as _textX, aw as restoreTextDirection, ax as noop, ay as distanceBetweenPoints, az as _setMinAndMaxByKey, aA as niceNum, aB as almostWhole, aC as almostEquals, aD as _decimalPlaces, aE as _longestText, aF as _filterBetween, aG as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    const me = this;\n    if (me._request) {\n      return;\n    }\n    me._running = true;\n    me._request = requestAnimFrame.call(window, () => {\n      me._update();\n      me._request = null;\n      if (me._running) {\n        me._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    const me = this;\n    let remaining = 0;\n    me._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        me._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        me._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    me._lastDate = date;\n    if (remaining === 0) {\n      me._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    const me = this;\n    if (me._active) {\n      me._notify(false);\n      const currentValue = me._target[me._prop];\n      const elapsed = date - me._start;\n      const remain = me._duration - elapsed;\n      me._start = date;\n      me._duration = Math.floor(Math.max(remain, cfg.duration));\n      me._total += elapsed;\n      me._loop = !!cfg.loop;\n      me._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      me._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    const me = this;\n    if (me._active) {\n      me.tick(Date.now());\n      me._active = false;\n      me._notify(false);\n    }\n  }\n  tick(date) {\n    const me = this;\n    const elapsed = date - me._start;\n    const duration = me._duration;\n    const prop = me._prop;\n    const from = me._from;\n    const loop = me._loop;\n    const to = me._to;\n    let factor;\n    me._active = from !== to && (loop || (elapsed < duration));\n    if (!me._active) {\n      me._target[prop] = to;\n      me._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      me._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = me._easing(Math.min(1, Math.max(0, factor)));\n    me._target[prop] = me._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive) {\n  for (const meta of vScale.getMatchingVisibleMetas('bar').reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true);\n    stack._bottom = getLastIndexInStack(stack, vScale, false);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return Object.assign(Object.create(parent),\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[meta.vScale.id] === undefined || stacks[meta.vScale.id][meta.index] === undefined) {\n      return;\n    }\n    delete stacks[meta.vScale.id][meta.index];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this.initialize();\n  }\n  initialize() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    me.addElements();\n  }\n  updateIndex(datasetIndex) {\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = me.getScaleForId(xid);\n    meta.yScale = me.getScaleForId(yid);\n    meta.rScale = me.getScaleForId(rid);\n    meta.iScale = me.getScaleForId(iid);\n    meta.vScale = me.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const me = this;\n    const dataset = me.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    if (isObject(data)) {\n      me._data = convertObjectDataToArray(data);\n    } else if (me._data !== data) {\n      if (me._data) {\n        unlistenArrayEvents(me._data, me);\n        clearStacks(me._cachedMeta);\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, me);\n      }\n      me._data = data;\n    }\n  }\n  addElements() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me._dataCheck();\n    if (me.datasetElementType) {\n      meta.dataset = new me.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    let stackChanged = false;\n    me._dataCheck();\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    me._resyncElements(resetNewElements);\n    if (stackChanged) {\n      updateStacks(me, meta._parsed);\n    }\n  }\n  configure() {\n    const me = this;\n    const config = me.chart.config;\n    const scopeKeys = config.datasetScopeKeys(me._type);\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys, true);\n    me.options = config.createResolver(scopes, me.getContext());\n    me._parsing = me.options.parsing;\n  }\n  parse(start, count) {\n    const me = this;\n    const {_cachedMeta: meta, _data: data} = me;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (me._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = me.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = me.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = me.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(me, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n      value = applyStack(stack, parsedValue, this._cachedMeta.index, {all: true});\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = me._getOtherScale(scale);\n    const stack = canStack && meta._stacked && {keys: getSortedDatasetIndices(me.chart, true), values: null};\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, value, parsed, otherValue;\n    function _skip() {\n      parsed = _parsed[i];\n      value = parsed[scale.axis];\n      otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(value) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      me.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        me.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me._cachedDataOpts = {};\n    me.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(me.options.clip, defaultClip(meta.xScale, meta.yScale, me.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const me = this;\n    const ctx = me._ctx;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = me._drawStart || 0;\n    const count = me._drawCount || (elements.length - start);\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.active) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    let context;\n    if (index >= 0 && index < me._cachedMeta.data.length) {\n      const element = me._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(me.getContext(), index, element));\n      context.parsed = me.getParsed(index);\n      context.raw = dataset.data[index];\n    } else {\n      context = me.$context ||\n        (me.$context = createDatasetContext(me.chart.getContext(), me.index));\n      context.dataset = dataset;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const me = this;\n    const active = mode === 'active';\n    const cache = me._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = me.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = me.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(me._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => me.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const me = this;\n    const chart = me.chart;\n    const cache = me._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = me.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(me._type, transition);\n      const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, me.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const me = this;\n    const numMeta = me._cachedMeta.data.length;\n    const numData = me._data.length;\n    if (numData > numMeta) {\n      me._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      me._removeElements(numData, numMeta - numData);\n    }\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      me.parse(0, count);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new me.dataElementType();\n    }\n    if (me._parsing) {\n      move(meta._parsed);\n    }\n    me.parse(start, count);\n    if (resetNewElements) {\n      me.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const me = this;\n    const meta = me._cachedMeta;\n    if (me._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._insertElements(this.getDataset().data.length - count, count);\n  }\n  _onDataPop() {\n    this._removeElements(this._cachedMeta.data.length - 1, 1);\n  }\n  _onDataShift() {\n    this._removeElements(0, 1);\n  }\n  _onDataSplice(start, count) {\n    this._removeElements(start, count);\n    this._insertElements(start, arguments.length - 2);\n  }\n  _onDataUnshift() {\n    this._insertElements(0, arguments.length);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale) {\n  if (!scale._cache.$bar) {\n    const metas = scale.getMatchingVisibleMetas('bar');\n    let values = [];\n    for (let i = 0, ilen = metas.length; i < ilen; i++) {\n      values = values.concat(metas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(scale) {\n  const values = getAllScaleValues(scale);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    min = Math.min(min, i && Math.abs(curr - prev) || min);\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    const me = this;\n    me.enableOptionSharing = true;\n    super.initialize();\n    const meta = me._cachedMeta;\n    meta.stack = me.getDataset().stack;\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const vScale = me._cachedMeta.vScale;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = me._getRuler();\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = me.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : me._calculateBarValuePixels(i);\n      const ipixels = me._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (me.index === stack._top || me.index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : undefined,\n        width: horizontal ? undefined : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      me.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(me._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(me.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(iScale);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: me._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const me = this;\n    const {vScale, _stacked} = me._cachedMeta;\n    const {base: baseValue, minBarLength} = me.options;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? me.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n      size = size < 0 ? -minBarLength : minBarLength;\n      if (value === 0) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    const actualBase = baseValue || 0;\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = vScale.getLineWidthForValue(actualBase) / 2;\n      if (size > 0) {\n        base += halfGrid;\n        size -= halfGrid;\n      } else if (size < 0) {\n        base -= halfGrid;\n        size += halfGrid;\n      }\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const me = this;\n    const scale = ruler.scale;\n    const options = me.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? me._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = me._getStackIndex(me.index, me._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(me.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    clipArea(chart.ctx, chart.chartArea);\n    for (; i < ilen; ++i) {\n      if (me.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(me._ctx);\n      }\n    }\n    unclipArea(chart.ctx);\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  interaction: {\n    mode: 'index'\n  },\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = [];\n    let i, ilen, item;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      item = data[i];\n      parsed.push({\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), i),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), i),\n        _custom: item && item.r && +item.r\n      });\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const {data, _parsed} = this._cachedMeta;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = me.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const me = this;\n    const points = me._cachedMeta.data;\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {xScale, yScale} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && me.getParsed(i);\n      const x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(parsed.x);\n      const y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(parsed.y);\n      const properties = {\n        x,\n        y,\n        skip: isNaN(x) || isNaN(y)\n      };\n      if (includeOptions) {\n        properties.options = me.resolveDataElementOptions(i, mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      me.updateElement(point, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    let i, ilen;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      meta._parsed[i] = +data[i];\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    const me = this;\n    for (let i = 0; i < me.chart.data.datasets.length; ++i) {\n      if (me.chart.isDatasetVisible(i)) {\n        const controller = me.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const me = this;\n    const chart = me.chart;\n    const {chartArea} = chart;\n    const meta = me._cachedMeta;\n    const arcs = meta.data;\n    const spacing = me.getMaxBorderWidth() + me.getMaxOffset(arcs);\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(me.options.cutout, maxSize), 1);\n    const chartWeight = me._getRingWeight(me.index);\n    const {circumference, rotation} = me._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(me.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / me._getVisibleDatasetWeightTotal();\n    me.offsetX = offsetX * outerRadius;\n    me.offsetY = offsetY * outerRadius;\n    meta.total = me.calculateTotal();\n    me.outerRadius = outerRadius - radiusLength * me._getRingWeightOffset(me.index);\n    me.innerRadius = Math.max(me.outerRadius - radiusLength * chartWeight, 0);\n    me.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const circumference = me._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null) {\n      return 0;\n    }\n    return me.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : me.innerRadius;\n    const outerRadius = animateScale ? 0 : me.outerRadius;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    let startAngle = me._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += me._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = me._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + me.offsetX,\n        y: centerY + me.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      startAngle += circumference;\n      me.updateElement(arc, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i)) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    const me = this;\n    let max = 0;\n    const chart = me.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          if (controller !== me) {\n            controller.configure();\n          }\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  indexAxis: 'r',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = me.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    me._drawStart = start;\n    me._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = me.resolveDatasetElementOptions(mode);\n    if (!me.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = me.options.segment;\n    me.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    me.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {xScale, yScale, _stacked} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const spanGaps = me.options.spanGaps;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = me.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && me.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = me.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed.y);\n      const x = properties.x = xScale.getPixelForValue(parsed.x, i);\n      const y = properties.y = reset || nullData ? yScale.getBasePixel() : yScale.getPixelForValue(_stacked ? me.applyStack(yScale, parsed, _stacked) : parsed.y, i);\n      properties.skip = isNaN(x) || isNaN(y) || nullData;\n      properties.stop = i > 0 && (parsed.x - prevParsed.x) > maxGapLength;\n      properties.parsed = parsed;\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      if (!directUpdate) {\n        me.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(me.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(me.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    this._cachedMeta.dataset.updateControlPoints(this.chart.chartArea);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const me = this;\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    me.outerRadius = outerRadius - (radiusLength * me.index);\n    me.innerRadius = me.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const dataset = me.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = me._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / me.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += me._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + me._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: me.resolveDataElementOptions(i, mode)\n      };\n      me.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const me = this;\n    const vScale = me._cachedMeta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = me.resolveDatasetElementOptions(mode);\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      me.updateElement(line, undefined, properties, mode);\n    }\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    const scale = me._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = me.resolveDataElementOptions(i, mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      me.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: either no adapter can be found or an incomplete integration was provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({index, data} = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  let items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\n        getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      options.axis = 'x';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      options.axis = 'y';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos: box.position,\n      horizontal: box.isHorizontal(),\n      weight: box.weight\n    });\n  }\n  return layoutBoxes;\n}\nfunction setLayoutDims(layouts, params) {\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    if (layout.horizontal) {\n      layout.width = layout.box.fullSize && params.availableWidth;\n      layout.height = params.hBoxMaxHeight;\n    } else {\n      layout.width = params.vBoxMaxWidth;\n      layout.height = layout.box.fullSize && params.availableHeight;\n    }\n  }\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout) {\n  const box = layout.box;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(layout.pos)) {\n    if (layout.size) {\n      chartArea[layout.pos] -= layout.size;\n    }\n    layout.size = layout.horizontal ? box.height : box.width;\n    chartArea[layout.pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params) || changed;\n}\nfunction placeBoxes(boxes, chartArea, params) {\n  const userPadding = params.padding;\n  let x = chartArea.x;\n  let y = chartArea.y;\n  let i, ilen, layout, box;\n  for (i = 0, ilen = boxes.length; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    if (layout.horizontal) {\n      box.left = box.fullSize ? userPadding.left : chartArea.left;\n      box.right = box.fullSize ? params.outerWidth - userPadding.right : chartArea.left + chartArea.w;\n      box.top = y;\n      box.bottom = y + box.height;\n      box.width = box.right - box.left;\n      y = box.bottom;\n    } else {\n      box.left = x;\n      box.right = x + box.width;\n      box.top = box.fullSize ? userPadding.top : chartArea.top;\n      box.bottom = box.fullSize ? params.outerHeight - userPadding.right : chartArea.top + chartArea.h;\n      box.height = box.bottom - box.top;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = width - padding.width;\n    const availableHeight = height - padding.height;\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params);\n    fitBoxes(verticalBoxes, chartArea, params);\n    if (fitBoxes(horizontalBoxes, chartArea, params)) {\n      fitBoxes(verticalBoxes, chartArea, params);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h);\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  const element = container || canvas;\n  const observer = new MutationObserver(entries => {\n    const parent = _getParentNode(element);\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.addedNodes.length; i++) {\n        const added = entry.addedNodes[i];\n        if (added === element || added === parent) {\n          listener(entry.target);\n        }\n      }\n    });\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const observer = new MutationObserver(entries => {\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.removedNodes.length; i++) {\n        if (entry.removedNodes[i] === canvas) {\n          listener();\n          break;\n        }\n      }\n    });\n  });\n  observer.observe(container, {childList: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && _getParentNode(container));\n  }\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const me = this;\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return me;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : me[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) > 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return Object.assign(Object.create(parent), {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return Object.assign(Object.create(parent), {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right} = scale;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    titleY = offsetFromEdge(scale, position, offset);\n    maxWidth = right - left;\n  } else {\n    titleX = offsetFromEdge(scale, position, offset);\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    const me = this;\n    me.options = options.setContext(me.getContext());\n    me.axis = options.axis;\n    me._userMin = me.parse(options.min);\n    me._userMax = me.parse(options.max);\n    me._suggestedMin = me.parse(options.suggestedMin);\n    me._suggestedMax = me.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    const me = this;\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = me.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(me, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    const me = this;\n    return {\n      left: me.paddingLeft || 0,\n      top: me.paddingTop || 0,\n      right: me.paddingRight || 0,\n      bottom: me.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    const sampleSize = tickOpts.sampleSize;\n    me.beforeUpdate();\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    me.ticks = null;\n    me._labelSizes = null;\n    me._gridLineItems = null;\n    me._labelItems = null;\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions();\n    me._maxLength = me.isHorizontal()\n      ? me.width + margins.left + margins.right\n      : me.height + margins.top + margins.bottom;\n    if (!me._dataLimitsCached) {\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits();\n      me._range = _addGrace(me, me.options.grace);\n      me._dataLimitsCached = true;\n    }\n    me.beforeBuildTicks();\n    me.ticks = me.buildTicks() || [];\n    me.afterBuildTicks();\n    const samplingEnabled = sampleSize < me.ticks.length;\n    me._convertTicksToLabels(samplingEnabled ? sample(me.ticks, sampleSize) : me.ticks);\n    me.configure();\n    me.beforeCalculateLabelRotation();\n    me.calculateLabelRotation();\n    me.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      me.ticks = autoSkip(me, me.ticks);\n      me._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      me._convertTicksToLabels(me.ticks);\n    }\n    me.beforeFit();\n    me.fit();\n    me.afterFit();\n    me.afterUpdate();\n  }\n  configure() {\n    const me = this;\n    let reversePixels = me.options.reverse;\n    let startPixel, endPixel;\n    if (me.isHorizontal()) {\n      startPixel = me.left;\n      endPixel = me.right;\n    } else {\n      startPixel = me.top;\n      endPixel = me.bottom;\n      reversePixels = !reversePixels;\n    }\n    me._startPixel = startPixel;\n    me._endPixel = endPixel;\n    me._reversePixels = reversePixels;\n    me._length = endPixel - startPixel;\n    me._alignToPixels = me.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    const me = this;\n    me.chart.notifyPlugins(name, me.getContext());\n    callback(me.options[name], [me]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], me);\n    }\n    for (i = 0; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const me = this;\n    const options = me.options;\n    const tickOpts = options.ticks;\n    const numTicks = me.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!me._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !me.isHorizontal()) {\n      me.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = me._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(me.chart.width - maxLabelWidth, 0, me.maxWidth);\n    tickWidth = options.offset ? me.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = me.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, me.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(Math.min((labelSizes.highest.height + 6) / tickWidth, 1)),\n        Math.asin(Math.min(maxHeight / maxLabelDiagonal, 1)) - Math.asin(maxLabelHeight / maxLabelDiagonal)\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    me.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const me = this;\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = me;\n    const display = me._isVisible();\n    const isHorizontal = me.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = me.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = me.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && me.ticks.length) {\n        const {first, last, widest, highest} = me._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(me.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(me.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        me._calculatePadding(first, last, sin, cos);\n      }\n    }\n    me._handleMargins();\n    if (isHorizontal) {\n      me.width = me._length = chart.width - me._margins.left - me._margins.right;\n      me.height = minSize.height;\n    } else {\n      me.width = minSize.width;\n      me.height = me._length = chart.height - me._margins.top - me._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const me = this;\n    const {ticks: {align, padding}, position} = me.options;\n    const isRotated = me.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && me.axis === 'x';\n    if (me.isHorizontal()) {\n      const offsetLeft = me.getPixelForTick(0) - me.left;\n      const offsetRight = me.right - me.getPixelForTick(me.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      me.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * me.width / (me.width - offsetLeft), 0);\n      me.paddingRight = Math.max((paddingRight - offsetRight + padding) * me.width / (me.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      me.paddingTop = paddingTop + padding;\n      me.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    const me = this;\n    if (me._margins) {\n      me._margins.left = Math.max(me.paddingLeft, me._margins.left);\n      me._margins.top = Math.max(me.paddingTop, me._margins.top);\n      me._margins.right = Math.max(me.paddingRight, me._margins.right);\n      me._margins.bottom = Math.max(me.paddingBottom, me._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    const me = this;\n    me.beforeTickToLabelConversion();\n    me.generateTickLabels(ticks);\n    me.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    const me = this;\n    let labelSizes = me._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = me.options.ticks.sampleSize;\n      let ticks = me.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      me._labelSizes = labelSizes = me._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    const me = this;\n    if (me._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = me._startPixel + decimal * me._length;\n    return _int16Range(me._alignToPixels ? _alignPixel(me.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const me = this;\n    const ticks = me.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(me.getContext(), index, tick));\n    }\n    return me.$context ||\n\t\t\t(me.$context = createScaleContext(me.chart.getContext(), me));\n  }\n  _tickSize() {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    const rot = toRadians(me.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = me._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return me.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const chart = me.chart;\n    const options = me.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(me.bottom);\n      ty1 = me.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(me.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = me.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(me.right);\n      tx1 = me.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(me.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = me.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    for (i = 0; i < ticksLength; ++i) {\n      const optsAtIndex = grid.setContext(me.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(me, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    me._ticksLength = ticksLength;\n    me._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const options = me.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(me.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = me.bottom - hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = me.top + hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = me.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = me.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = me._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = me._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(me.getContext(i));\n      pixel = me.getPixelForTick(i) + optionTicks.labelOffset;\n      font = me._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const me = this;\n    const {position, ticks} = me.options;\n    const rotation = -toRadians(me.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const me = this;\n    const {position, ticks: {crossAlign, mirror, padding}} = me.options;\n    const labelSizes = me._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        textAlign = 'left';\n        x = me.right + padding;\n      } else {\n        x = me.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = me.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        textAlign = 'right';\n        x = me.left + padding;\n      } else {\n        x = me.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = me.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    const me = this;\n    if (me.options.ticks.mirror) {\n      return;\n    }\n    const chart = me.chart;\n    const position = me.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: me.left, bottom: chart.height, right: me.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: me.top, left: 0, bottom: me.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const me = this;\n    const grid = me.options.grid;\n    if (!me._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = me.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(me.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const me = this;\n    const grid = me.options.grid;\n    const ctx = me.ctx;\n    const items = me._gridLineItems || (me._gridLineItems = me._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const me = this;\n    const {chart, ctx, options: {grid}} = me;\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(me.getContext(0)).lineWidth;\n    const borderValue = me._borderValue;\n    let x1, x2, y1, y2;\n    if (me.isHorizontal()) {\n      x1 = _alignPixel(chart, me.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, me.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = me.ctx;\n    const area = me._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = me._labelItems || (me._labelItems = me._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom') {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    const me = this;\n    if (!me._isVisible()) {\n      return;\n    }\n    me.drawBackground();\n    me.drawGrid(chartArea);\n    me.drawBorder();\n    me.drawTitle();\n    me.drawLabels(chartArea);\n  }\n  _layers() {\n    const me = this;\n    const opts = me.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = opts.grid && opts.grid.z || 0;\n    if (!me._isVisible() || me.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw(chartArea) {\n          me.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw(chartArea) {\n        me.drawBackground();\n        me.drawGrid(chartArea);\n        me.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw() {\n        me.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw(chartArea) {\n        me.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const me = this;\n    const metas = me.chart.getSortedVisibleDatasetMetas();\n    const axisID = me.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === me.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const me = this;\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = me.register(proto);\n    }\n    const items = me.items;\n    const id = item.id;\n    const scope = me.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (me.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    const me = this;\n    [...args].forEach(arg => {\n      const reg = typedRegistry || me._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === me.plugins && arg.id)) {\n        me._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || me._getRegistryForType(item);\n          me._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    const me = this;\n    if (hook === 'beforeInit') {\n      me._init = me._createDescriptors(chart, true);\n      me._notify(me._init, chart, 'install');\n    }\n    const descriptors = filter ? me._descriptors(chart).filter(filter) : me._descriptors(chart);\n    const result = me._notify(descriptors, chart, hook, args);\n    if (hook === 'destroy') {\n      me._notify(descriptors, chart, 'stop');\n      me._notify(me._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = [...scopes];\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    if ((isScriptable(prop) && isFunction(proxy[prop]))\n      || (isIndexable(prop) && isArray(proxy[prop]))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.2.0\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction getCanvas(item) {\n  if (isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nclass Chart {\n  constructor(item, config) {\n    const me = this;\n    this.config = config = new Config(config);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    this.platform = me._initializePlatform(initialCanvas, config);\n    const context = me.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._sortedMetasets = [];\n    this.scales = {};\n    this.scale = undefined;\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(() => this.update('resize'), options.resizeDelay || 0);\n    instances[me.id] = me;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(me, 'complete', onAnimationsComplete);\n    animator.listen(me, 'progress', onAnimationProgress);\n    me._initialize();\n    if (me.attached) {\n      me.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    const me = this;\n    me.notifyPlugins('beforeInit');\n    if (me.options.responsive) {\n      me.resize();\n    } else {\n      retinaScale(me, me.options.devicePixelRatio);\n    }\n    me.bindEvents();\n    me.notifyPlugins('afterInit');\n    return me;\n  }\n  _initializePlatform(canvas, config) {\n    if (config.platform) {\n      return new config.platform();\n    } else if (!isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n      return new BasicPlatform();\n    }\n    return new DomPlatform();\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const me = this;\n    const options = me.options;\n    const canvas = me.canvas;\n    const aspectRatio = options.maintainAspectRatio && me.aspectRatio;\n    const newSize = me.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const oldRatio = me.currentDevicePixelRatio;\n    const newRatio = options.devicePixelRatio || me.platform.getDevicePixelRatio();\n    if (me.width === newSize.width && me.height === newSize.height && oldRatio === newRatio) {\n      return;\n    }\n    me.width = newSize.width;\n    me.height = newSize.height;\n    me._aspectRatio = me.aspectRatio;\n    retinaScale(me, newRatio, true);\n    me.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [me, newSize], me);\n    if (me.attached) {\n      if (me._doResize()) {\n        me.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const me = this;\n    const options = me.options;\n    const scaleOpts = options.scales;\n    const scales = me.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: me.ctx,\n          chart: me\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(me, scale, scale.options);\n      layouts.addBox(me, scale);\n    });\n  }\n  _updateMetasetIndex(meta, index) {\n    const metasets = this._metasets;\n    const oldIndex = meta.index;\n    if (oldIndex !== index) {\n      metasets[oldIndex] = metasets[index];\n      metasets[index] = meta;\n      meta.index = index;\n    }\n  }\n  _updateMetasets() {\n    const me = this;\n    const metasets = me._metasets;\n    const numData = me.data.datasets.length;\n    const numMeta = metasets.length;\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        me._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    me._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const me = this;\n    const {_metasets: metasets, data: {datasets}} = me;\n    if (metasets.length > datasets.length) {\n      delete me._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        me._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const me = this;\n    const newControllers = [];\n    const datasets = me.data.datasets;\n    let i, ilen;\n    me._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = me.getDatasetMeta(i);\n      const type = dataset.type || me.config.type;\n      if (meta.type && meta.type !== type) {\n        me._destroyDatasetMeta(i);\n        meta = me.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, me.options);\n      meta.order = dataset.order || 0;\n      me._updateMetasetIndex(meta, i);\n      meta.label = '' + dataset.label;\n      meta.visible = me.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(me, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    me._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    const me = this;\n    each(me.data.datasets, (dataset, datasetIndex) => {\n      me.getDatasetMeta(datasetIndex).controller.reset();\n    }, me);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const me = this;\n    const config = me.config;\n    config.update();\n    me._options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    each(me.scales, (scale) => {\n      layouts.removeBox(me, scale);\n    });\n    const animsDisabled = me._animationsDisabled = !me.options.animation;\n    me.ensureScalesHaveIDs();\n    me.buildOrUpdateScales();\n    const existingEvents = new Set(Object.keys(me._listeners));\n    const newEvents = new Set(me.options.events);\n    if (!setsEqual(existingEvents, newEvents)) {\n      me.unbindEvents();\n      me.bindEvents();\n    }\n    me._plugins.invalidate();\n    if (me.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = me.buildOrUpdateControllers();\n    me.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; i++) {\n      const {controller} = me.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    me._minPadding = minPadding;\n    me._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    me._updateDatasets(mode);\n    me.notifyPlugins('afterUpdate', {mode});\n    me._layers.sort(compare2Level('z', '_idx'));\n    if (me._lastEvent) {\n      me._eventHandler(me._lastEvent, true);\n    }\n    me.render();\n  }\n  _updateLayout(minPadding) {\n    const me = this;\n    if (me.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(me, me.width, me.height, minPadding);\n    const area = me.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    me._layers = [];\n    each(me.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      me._layers.push(...box._layers());\n    }, me);\n    me._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    me.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    const me = this;\n    const isFunction = typeof mode === 'function';\n    if (me.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._updateDataset(i, isFunction ? mode({datasetIndex: i}) : mode);\n    }\n    me.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const me = this;\n    const meta = me.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (me.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    const me = this;\n    if (me.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(me)) {\n      if (me.attached && !animator.running(me)) {\n        animator.start(me);\n      }\n    } else {\n      me.draw();\n      onAnimationsComplete({chart: me});\n    }\n  }\n  draw() {\n    const me = this;\n    let i;\n    if (me._resizeBeforeDraw) {\n      const {width, height} = me._resizeBeforeDraw;\n      me._resize(width, height);\n      me._resizeBeforeDraw = null;\n    }\n    me.clear();\n    if (me.width <= 0 || me.height <= 0) {\n      return;\n    }\n    if (me.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = me._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const me = this;\n    const metasets = me._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    const me = this;\n    if (me.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = me.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      me._drawDataset(metasets[i]);\n    }\n    me.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const me = this;\n    const ctx = me.ctx;\n    const clip = meta._clip;\n    const area = me.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (me.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    clipArea(ctx, {\n      left: clip.left === false ? 0 : area.left - clip.left,\n      right: clip.right === false ? me.width : area.right + clip.right,\n      top: clip.top === false ? 0 : area.top - clip.top,\n      bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom\n    });\n    meta.controller.draw();\n    unclipArea(ctx);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const me = this;\n    const dataset = me.data.datasets[datasetIndex];\n    const metasets = me._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = metasets[datasetIndex] = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = {chart: this, type: 'chart'});\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateDatasetVisibility(datasetIndex, visible) {\n    const me = this;\n    const mode = visible ? 'show' : 'hide';\n    const meta = me.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    me.setDatasetVisibility(datasetIndex, visible);\n    anims.update(meta, {visible});\n    me.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n  }\n  hide(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, false);\n  }\n  show(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const me = this;\n    const meta = me._metasets && me._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n      delete me._metasets[datasetIndex];\n    }\n  }\n  destroy() {\n    const me = this;\n    const {canvas, ctx} = me;\n    let i, ilen;\n    me.stop();\n    animator.remove(me);\n    for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._destroyDatasetMeta(i);\n    }\n    me.config.clearCache();\n    if (canvas) {\n      me.unbindEvents();\n      clearCanvas(canvas, ctx);\n      me.platform.releaseContext(ctx);\n      me.canvas = null;\n      me.ctx = null;\n    }\n    me.notifyPlugins('destroy');\n    delete instances[me.id];\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(me, type, listener);\n        delete listeners[type];\n      }\n    };\n    let listener = function(e, x, y) {\n      e.offsetX = x;\n      e.offsetY = y;\n      me._eventHandler(e);\n    };\n    each(me.options.events, (type) => _add(type, listener));\n    if (me.options.responsive) {\n      listener = (width, height) => {\n        if (me.canvas) {\n          me.resize(width, height);\n        }\n      };\n      let detached;\n      const attached = () => {\n        _remove('attach', attached);\n        me.attached = true;\n        me.resize();\n        _add('resize', listener);\n        _add('detach', detached);\n      };\n      detached = () => {\n        me.attached = false;\n        _remove('resize', listener);\n        _add('attach', attached);\n      };\n      if (platform.isAttached(me.canvas)) {\n        attached();\n      } else {\n        detached();\n      }\n    } else {\n      me.attached = true;\n    }\n  }\n  unbindEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    if (!listeners) {\n      return;\n    }\n    me._listeners = {};\n    each(listeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const me = this;\n    const lastActive = me._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const me = this;\n    const hoverOptions = me.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      me.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      me.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const me = this;\n    const args = {event: e, replay, cancelable: true};\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.type);\n    if (me.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = me._handleEvent(e, replay);\n    args.cancelable = false;\n    me.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      me.render();\n    }\n    return me;\n  }\n  _handleEvent(e, replay) {\n    const me = this;\n    const {_active: lastActive = [], options} = me;\n    const hoverOptions = options.hover;\n    const useFinalPosition = replay;\n    let active = [];\n    let changed = false;\n    let lastEvent = null;\n    if (e.type !== 'mouseout') {\n      active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n      lastEvent = e.type === 'click' ? me._lastEvent : e;\n    }\n    me._lastEvent = null;\n    if (_isPointInArea(e, me.chartArea, me._minPadding)) {\n      callback(options.onHover, [e, active, me], me);\n      if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n        callback(options.onClick, [e, active, me], me);\n      }\n    }\n    changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive, replay);\n    }\n    me._lastEvent = lastEvent;\n    return changed;\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element) {\n  const {startAngle, endAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element) {\n  const {x, y, startAngle, endAngle, pixelMargin} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element) {\n  if (element.fullCircles) {\n    element.endAngle = element.startAngle + TAU;\n    pathArc(ctx, element);\n    for (let i = 0; i < element.fullCircles; ++i) {\n      ctx.fill();\n    }\n  }\n  if (!isNaN(element.circumference)) {\n    element.endAngle = element.startAngle + element.circumference % TAU;\n  }\n  pathArc(ctx, element);\n  ctx.fill();\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, endAngle, pixelMargin} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    element.endAngle = element.startAngle + TAU;\n    clipArc(ctx, element);\n    element.endAngle = endAngle;\n    if (element.endAngle === element.startAngle) {\n      element.endAngle += TAU;\n      element.fullCircles--;\n    }\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < element.fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < element.fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element) {\n  const {options} = element;\n  const inner = options.borderAlign === 'inner';\n  if (!options.borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element);\n  }\n  pathArc(ctx, element);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const betweenAngles = circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = (distance >= innerRadius && distance <= outerRadius);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options;\n    const offset = options.offset || 0;\n    me.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    me.fullCircles = Math.floor(me.circumference / TAU);\n    if (me.circumference === 0 || me.innerRadius < 0 || me.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    if (offset && me.circumference < TAU) {\n      const halfAngle = (me.startAngle + me.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    drawArc(ctx, me);\n    drawBorder(ctx, me);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension) {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension) {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && line.segments.length === 1) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea) {\n    const me = this;\n    const options = me.options;\n    if (options.tension && !options.stepped && !me._pointsUpdated) {\n      const loop = options.spanGaps ? me._loop : me._fullLoop;\n      _updateBezierControlPoints(me._points, options, chartArea, loop);\n      me._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    const me = this;\n    me._points = points;\n    delete me._segments;\n    delete me._path;\n    me._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const me = this;\n    const options = me.options;\n    const value = point[property];\n    const points = me.points;\n    const segments = _boundSegments(me, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const me = this;\n    const segments = me.segments;\n    const segmentMethod = _getSegmentMethod(me);\n    let loop = me._loop;\n    start = start || 0;\n    count = count || (me.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, me, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const me = this;\n    const options = me.options || {};\n    const points = me.points || [];\n    if (!points.length || !options.borderWidth) {\n      return;\n    }\n    ctx.save();\n    draw(ctx, me, start, count);\n    ctx.restore();\n    if (me.animated) {\n      me._pointsUpdated = false;\n      me._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options;\n    if (me.skip || options.radius < 0.1) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, me.x, me.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction parseBorderSkipped(bar) {\n  let edge = bar.options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    return res;\n  }\n  edge = bar.horizontal\n    ? parseEdge(edge, 'left', 'right', bar.base > bar.x)\n    : parseEdge(edge, 'bottom', 'top', bar.base < bar.y);\n  res[edge] = true;\n  return res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : Math.max(Math.min(value, max), min);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = parseBorderSkipped(bar);\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = parseBorderSkipped(bar);\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || x >= bounds.left && x <= bounds.right)\n\t\t&& (skipY || y >= bounds.top && y <= bounds.bottom);\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const options = this.options;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, outer);\n      ctx.clip();\n      addRectPath(ctx, inner);\n      ctx.fillStyle = options.borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inner);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  enableBorderRadius: true,\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      if (count <= 4 * availableWidth) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach((segment) => {\n    const first = linePoints[segment.start];\n    const last = linePoints[segment.end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {chart, scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(chart, index);\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nconst isLineAndNotInHideAnimation = (meta) => meta.type === 'line' && !meta.hidden;\nfunction getLinesBelow(chart, index) {\n  const below = [];\n  const metas = chart.getSortedVisibleDatasetMetas();\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (isLineAndNotInHideAnimation(meta)) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (pointValue >= firstValue && pointValue <= lastValue) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\nfunction getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    const bounds = getBounds(property, points[segment.start], points[segment.end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[segment.start],\n        end: points[segment.end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      interpolatedLineTo(ctx, target, end, property);\n    }\n    const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n    const loop = lineLoop && targetLoop;\n    if (!loop) {\n      interpolatedLineTo(ctx, target, start, property);\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area);\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins;\n    me.setDimensions();\n    me.buildLabels();\n    me.fit();\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n  }\n  buildLabels() {\n    const me = this;\n    const labelOpts = me.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [me.chart], me) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, me.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, me.chart.data));\n    }\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n    me.legendItems = legendItems;\n  }\n  fit() {\n    const me = this;\n    const {options, ctx} = me;\n    if (!options.display) {\n      me.width = me.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = me._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (me.isHorizontal()) {\n      width = me.maxWidth;\n      height = me._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = me.maxHeight;\n      width = me._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    me.width = Math.min(width, options.maxWidth || me.maxWidth);\n    me.height = Math.min(height, options.maxHeight || me.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxWidth, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const lineWidths = me.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxHeight, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const columnSizes = me.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let top = 0;\n    let col = 0;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + fontSize + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        top = 0;\n        currentColWidth = currentColHeight = 0;\n      }\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += fontSize + padding;\n      hitboxes[i] = {left, top, col, width: itemWidth, height: itemHeight};\n      top += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    const me = this;\n    if (!me.options.display) {\n      return;\n    }\n    const titleHeight = me._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}}} = me;\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n        }\n        hitbox.top += me.top + titleHeight + padding;\n        hitbox.left = left;\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += me.left + padding;\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    const me = this;\n    if (me.options.display) {\n      const ctx = me.ctx;\n      clipArea(ctx, me);\n      me._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const me = this;\n    const {options: opts, columnSizes, lineWidths, ctx} = me;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    me.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: legendItem.textAlign\n      });\n    };\n    const isHorizontal = me.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, me.left + padding, me.right - lineWidths[0]),\n        y: me.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: me.left + padding,\n        y: _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(me.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    me.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + (fontSize / 2) + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(me.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > me.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, me.left + padding, me.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > me.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, me.right);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(me.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const me = this;\n    const opts = me.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const ctx = me.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = me.left;\n    let maxWidth = me.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...me.lineWidths);\n      y = me.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, me.right - maxWidth);\n    } else {\n      const maxHeight = me.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, me.top, me.bottom - maxHeight - opts.labels.padding - me._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    const me = this;\n    let i, hitBox, lh;\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      lh = me.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          return me.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const me = this;\n    const opts = me.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = me._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = me._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, me], me);\n      }\n      me._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, me], me);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, me], me);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const me = this;\n    const opts = me.options;\n    me.left = 0;\n    me.top = 0;\n    if (!opts.display) {\n      me.width = me.height = me.right = me.bottom = 0;\n      return;\n    }\n    me.width = me.right = maxWidth;\n    me.height = me.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    me._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + me._padding.height;\n    if (me.isHorizontal()) {\n      me.height = textSize;\n    } else {\n      me.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + me._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = me._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip._chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const radiusAndPadding = cornerRadius + caretPadding;\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return Object.assign(Object.create(parent), {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._chart = config._chart;\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const me = this;\n    const cached = me._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = me._chart;\n    const options = me.options.setContext(me.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(me._chart, opts);\n    if (opts._cacheable) {\n      me._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    const me = this;\n    return me.$context ||\n\t\t\t(me.$context = createTooltipContext(me._chart.getContext(), me, me._tooltipItems));\n  }\n  getTitle(context, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(me, [context]);\n    const title = callbacks.title.apply(me, [context]);\n    const afterTitle = callbacks.afterTitle.apply(me, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(me, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(me, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(me, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(me, [tooltipItems]);\n    const footer = callbacks.footer.apply(me, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(me, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const me = this;\n    const active = me._active;\n    const data = me._chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(me._chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(me, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(me, context));\n      labelTextColors.push(scoped.labelTextColor.call(me, context));\n    });\n    me.labelColors = labelColors;\n    me.labelPointStyles = labelPointStyles;\n    me.labelTextColors = labelTextColors;\n    me.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    const active = me._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (me.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(me, active, me._eventPosition);\n      tooltipItems = me._createItems(options);\n      me.title = me.getTitle(tooltipItems, options);\n      me.beforeBody = me.getBeforeBody(tooltipItems, options);\n      me.body = me.getBody(tooltipItems, options);\n      me.afterBody = me.getAfterBody(tooltipItems, options);\n      me.footer = me.getFooter(tooltipItems, options);\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(me._chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, me._chart);\n      me.xAlign = alignment.xAlign;\n      me.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    me._tooltipItems = tooltipItems;\n    me.$context = undefined;\n    if (properties) {\n      me._resolveAnimations().update(me, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(me, {chart: me._chart, tooltip: me, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {cornerRadius, caretSize} = options;\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + cornerRadius + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - cornerRadius - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const me = this;\n    const title = me.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const me = this;\n    const labelColors = me.labelColors[i];\n    const labelPointStyle = me.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(me, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = me.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const me = this;\n    const {body} = me;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(me, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(me.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + 1) : (boxWidth + 2)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = me.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        me._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(me.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const me = this;\n    const footer = me.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const radius = options.cornerRadius;\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const me = this;\n    const chart = me._chart;\n    const anims = me.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(me, me._active, me._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, me._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        me.xAlign = alignment.xAlign;\n        me.yAlign = alignment.yAlign;\n        me.width = size.width;\n        me.height = size.height;\n        me.caretX = position.x;\n        me.caretY = position.y;\n        me._resolveAnimations().update(me, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    let opacity = me.opacity;\n    if (!opacity) {\n      return;\n    }\n    me._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: me.width,\n      height: me.height\n    };\n    const pt = {\n      x: me.x,\n      y: me.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = me.title.length || me.beforeBody.length || me.body.length || me.afterBody.length || me.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      me.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      me.drawTitle(pt, ctx, options);\n      me.drawBody(pt, ctx, options);\n      me.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const me = this;\n    const lastActive = me._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me._chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = me._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      me._active = active;\n      me._eventPosition = eventPosition;\n      me.update(true);\n    }\n  }\n  handleEvent(e, replay) {\n    const me = this;\n    const options = me.options;\n    const lastActive = me._active || [];\n    let changed = false;\n    let active = [];\n    if (e.type !== 'mouseout') {\n      active = me._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n      if (options.reverse) {\n        active.reverse();\n      }\n    }\n    const positionChanged = me._positionChanged(active, e);\n    changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      me._active = active;\n      if (options.enabled || options.external) {\n        me._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        me.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({_chart: chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: plugin_filler,\nLegend: plugin_legend,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index) => typeof raw === 'string'\n  ? labels.push(raw) - 1\n  : isNaN(raw) ? null : index;\nfunction findOrAddLabel(labels, raw, index) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw));\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me.getMinMax(true);\n    if (me.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = me.getLabels().length - 1;\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const min = me.min;\n    const max = me.max;\n    const offset = me.options.offset;\n    const ticks = [];\n    let labels = me.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    me._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    me._startValue = me.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const labels = me.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    const me = this;\n    super.configure();\n    if (!me.isHorizontal()) {\n      me._reversePixels = !me._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (typeof value !== 'number') {\n      value = me.parse(value);\n    }\n    return value === null ? NaN : me.getPixelForDecimal((value - me._startValue) / me._valueRange);\n  }\n  getPixelForTick(index) {\n    const me = this;\n    const ticks = me.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return me.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    return Math.round(me._startValue + me.getDecimalForPixel(pixel) * me._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {step, min, max, precision, count, maxTicks} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  niceMin = Math.floor(rmin / spacing) * spacing;\n  niceMax = Math.ceil(rmax / spacing) * spacing;\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.min((max - min) / spacing, maxTicks);\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  factor = Math.pow(10, isNullOrUndef(precision) ? _decimalPlaces(spacing) : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    ticks.push({value: min});\n    if (niceMin <= min) {\n      j++;\n    }\n    if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, spacing / 10)) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined) {\n    if (almostEquals(ticks[ticks.length - 1].value, max, spacing / 10)) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {beginAtZero, stacked} = me.options;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero || stacked) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      setMax(max + 1);\n      if (!beginAtZero) {\n        setMin(min - 1);\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  getTickLimit() {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n    } else {\n      maxTicks = me.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = me.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n    };\n    const dataRange = me._range || me;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const me = this;\n    const ticks = me.ticks;\n    let start = me.min;\n    let end = me.max;\n    super.configure();\n    if (me.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    me._startValue = start;\n    me._endValue = end;\n    me._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? min : 0;\n    me.max = isNumberFinite(max) ? max : 1;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const me = this;\n    if (me.isHorizontal()) {\n      return Math.ceil(me.width / 40);\n    }\n    const tickFont = me._resolveTickFontOptions(0);\n    return Math.ceil(me.height / tickFont.lineHeight);\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    me.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (me.options.beginAtZero) {\n      me._zero = true;\n    }\n    me.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let min = me.min;\n    let max = me.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (me._zero && me.min !== me._suggestedMin && min === exp(me.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const generationOptions = {\n      min: me._userMin,\n      max: me._userMax\n    };\n    const ticks = generateTicks(generationOptions, me);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale);\n  }\n  configure() {\n    const me = this;\n    const start = me.min;\n    super.configure();\n    me._startValue = log10(start);\n    me._valueRange = log10(me.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (value === undefined || value === 0) {\n      value = me.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return me.getPixelForDecimal(value === me.min\n      ? 0\n      : (log10(value) - me._startValue) / me._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const decimal = me.getDecimalForPixel(pixel);\n    return Math.pow(10, me._startValue + decimal * me._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, lineHeight, label) {\n  if (isArray(label)) {\n    return {\n      w: _longestText(ctx, ctx.font, label),\n      h: label.length * lineHeight\n    };\n  }\n  return {\n    w: ctx.measureText(label).width,\n    h: lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  const furthestAngles = {};\n  let i, textSize, pointPosition;\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale.getLabels().length;\n  for (i = 0; i < valueCount; i++) {\n    const opts = scale.options.pointLabels.setContext(scale.getContext(i));\n    padding[i] = opts.padding;\n    pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    const plFont = toFont(opts.font);\n    scale.ctx.font = plFont.string;\n    textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = scale.getIndexAngle(i);\n    const angle = toDegrees(angleRadians);\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  scale._pointLabelItems = [];\n  const opts = scale.options;\n  const tickBackdropHeight = getTickBackdropHeight(opts);\n  const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n  for (i = 0; i < valueCount; i++) {\n    const extra = (i === 0 ? tickBackdropHeight / 2 : 0);\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n    const angle = toDegrees(scale.getIndexAngle(i));\n    const size = labelSizes[i];\n    adjustPointPositionForLabelHeight(angle, size, pointLabelPosition);\n    const textAlign = getTextAlignForAngle(angle);\n    let left;\n    if (textAlign === 'left') {\n      left = pointLabelPosition.x;\n    } else if (textAlign === 'center') {\n      left = pointLabelPosition.x - (size.w / 2);\n    } else {\n      left = pointLabelPosition.x - size.w;\n    }\n    const right = left + size.w;\n    scale._pointLabelItems[i] = {\n      x: pointLabelPosition.x,\n      y: pointLabelPosition.y,\n      textAlign,\n      left,\n      top: pointLabelPosition.y,\n      right,\n      bottom: pointLabelPosition.y + size.h,\n    };\n  }\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n  if (angle === 90 || angle === 270) {\n    position.y -= (textSize.h / 2);\n  } else if (angle > 270 || angle < 90) {\n    position.y -= textSize.h;\n  }\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction numberOrZero(param) {\n  return isNumber(param) ? param : 0;\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const me = this;\n    me.width = me.maxWidth;\n    me.height = me.maxHeight;\n    me.paddingTop = getTickBackdropHeight(me.options) / 2;\n    me.xCenter = Math.floor(me.width / 2);\n    me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n    me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(false);\n    me.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    me.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    LinearScaleBase.prototype.generateTickLabels.call(me, ticks);\n    me._pointLabels = me.getLabels().map((value, index) => {\n      const label = callback(me.options.pointLabels.callback, [value, index], me);\n      return label || label === 0 ? label : '';\n    });\n  }\n  fit() {\n    const me = this;\n    const opts = me.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(me);\n    } else {\n      me.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n    const me = this;\n    let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n    let radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n    let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n    let radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n    radiusReductionLeft = numberOrZero(radiusReductionLeft);\n    radiusReductionRight = numberOrZero(radiusReductionRight);\n    radiusReductionTop = numberOrZero(radiusReductionTop);\n    radiusReductionBottom = numberOrZero(radiusReductionBottom);\n    me.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(\n      Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n      Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n    me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    const me = this;\n    const maxRight = me.width - rightMovement - me.drawingArea;\n    const maxLeft = leftMovement + me.drawingArea;\n    const maxTop = topMovement + me.drawingArea;\n    const maxBottom = (me.height - me.paddingTop) - bottomMovement - me.drawingArea;\n    me.xCenter = Math.floor(((maxLeft + maxRight) / 2) + me.left);\n    me.yCenter = Math.floor(((maxTop + maxBottom) / 2) + me.top + me.paddingTop);\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / this.getLabels().length;\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    const me = this;\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = me.drawingArea / (me.max - me.min);\n    if (me.options.reverse) {\n      return (me.max - value) * scalingFactor;\n    }\n    return (value - me.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const me = this;\n    const scaledDistance = distance / (me.drawingArea / (me.max - me.min));\n    return me.options.reverse ? me.max - scaledDistance : me.min + scaledDistance;\n  }\n  getPointPosition(index, distanceFromCenter) {\n    const me = this;\n    const angle = me.getIndexAngle(index) - HALF_PI;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + me.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + me.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const me = this;\n    const {backgroundColor, grid: {circular}} = me.options;\n    if (backgroundColor) {\n      const ctx = me.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(me, me.getDistanceFromCenterForValue(me._endValue), circular, me.getLabels().length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const {angleLines, grid} = opts;\n    const labelCount = me.getLabels().length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(me, labelCount);\n    }\n    if (grid.display) {\n      me.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = me.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(me.getContext(index - 1));\n          drawRadiusLine(me, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = me.getLabels().length - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(me.getContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = me.getDistanceFromCenterForValue(opts.ticks.reverse ? me.min : me.max);\n        position = me.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(me.xCenter, me.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = me.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(me.xCenter, me.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    me.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(me.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = me.getDistanceFromCenterForValue(me.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const me = this;\n    const options = me.options;\n    const adapter = me._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(me._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(me.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    me.min = Math.min(min, max - 1);\n    me.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const me = this;\n    const options = me.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? me.getLabelTimestamps() : me._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      me.min = me._userMin || timestamps[0];\n      me.max = me._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = me.min;\n    const max = me.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    me._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, me.min, me.max, me._getLabelCapacity(min))\n      : determineUnitForFormatting(me, ticks.length, timeOpts.minUnit, me.min, me.max));\n    me._majorUnit = !tickOpts.major.enabled || me._unit === 'year' ? undefined\n      : determineMajorUnit(me._unit);\n    me.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(me, ticks, me._majorUnit);\n  }\n  initOffsets(timestamps) {\n    const me = this;\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (me.options.offset && timestamps.length) {\n      first = me.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (me.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = me.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - me.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    me._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const me = this;\n    const adapter = me._adapter;\n    const min = me.min;\n    const max = me.max;\n    const options = me.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, me._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && me.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const adapter = me._adapter;\n    const timeOpts = me.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const me = this;\n    const options = me.options;\n    const formats = options.time.displayFormats;\n    const unit = me._unit;\n    const majorUnit = me._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = me._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], me) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    const me = this;\n    return value === null ? NaN : (value - me.min) / (me.max - me.min);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return me.min + pos * (me.max - me.min);\n  }\n  _getLabelSize(label) {\n    const me = this;\n    const ticksOpts = me.options.ticks;\n    const tickLabelWidth = me.ctx.measureText(label).width;\n    const angle = toRadians(me.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = me._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const me = this;\n    const timeOpts = me.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = me._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(me, [exampleTime], me._majorUnit), format);\n    const size = me._getLabelSize(exampleLabel);\n    const capacity = Math.floor(me.isHorizontal() ? me.width / size.w : me.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    const me = this;\n    let timestamps = me._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = me.getMatchingVisibleMetas();\n    if (me._normalized && metas.length) {\n      return (me._cache.data = metas[0].controller.getAllParsedValues(me));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(me));\n    }\n    return (me._cache.data = me.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const me = this;\n    const timestamps = me._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = me.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(me, labels[i]));\n    }\n    return (me._cache.labels = me._normalized ? timestamps : me.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    prevSource = Math.floor(val);\n    nextSource = Math.ceil(val);\n    prevTarget = table[prevSource];\n    nextTarget = table[nextSource];\n  } else {\n    const result = _lookup(table, val);\n    prevTarget = result.lo;\n    nextTarget = result.hi;\n    prevSource = table[prevTarget];\n    nextSource = table[nextTarget];\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._maxIndex = undefined;\n  }\n  initOffsets() {\n    const me = this;\n    const timestamps = me._getTimestampsForTable();\n    me._table = me.buildLookupTable(timestamps);\n    me._maxIndex = me._table.length - 1;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const me = this;\n    const {min, max} = me;\n    if (!timestamps.length) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    const items = [min];\n    let i, ilen, curr;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n    items.push(max);\n    return items;\n  }\n  _getTimestampsForTable() {\n    const me = this;\n    let timestamps = me._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = me.getDataTimestamps();\n    const label = me.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = me.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = me._cache.all = timestamps;\n    return timestamps;\n  }\n  getPixelForValue(value, index) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me._normalized && me._maxIndex > 0 && !isNullOrUndef(index)\n      ? index / me._maxIndex : me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getDecimalForValue(value) {\n    return interpolate(this._table, value) / this._maxIndex;\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const decimal = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(me._table, decimal * this._maxIndex, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n","import { elt } from \"./util\";\r\nimport dayjs from \"dayjs\";\r\nimport utc from \"dayjs/plugin/utc\";\r\nimport Chart from \"chart.js\";\r\n\r\n/* import \"@fortawesome/fontawesome-pro/css/fontawesome.css\";\r\nimport \"@fortawesome/fontawesome-pro/css/regular.min.css\"; */\r\n\r\ndayjs.extend(utc); // server dates in utc\r\n//header\r\nconst header = elt(\"h1\", {}, \"Mjerenja na vodoopskrbnoj mreži\");\r\ndocument.body.appendChild(header);\r\n//--\r\n//input form\r\nconst deviceSelector = elt(\r\n  \"select\",\r\n  {},\r\n  elt(\"option\", { value: \"177\" }, \"Korčula 1\"), //\r\n  elt(\"option\", { value: \"178\" }, \"Korčula 2\") // fake for test\r\n);\r\nconst startDate = elt(\"input\", {\r\n  type: \"datetime-local\",\r\n  value: dayjs().subtract(1, \"days\").format(\"YYYY-MM-DDTHH:mm\"),\r\n});\r\nconst endDate = elt(\"input\", {\r\n  type: \"datetime-local\",\r\n  value: dayjs().format(\"YYYY-MM-DDTHH:mm\"),\r\n});\r\nconst fielset = elt(\r\n  \"fieldset\",\r\n  {},\r\n  elt(\"label\", {}, \"Odaberi uređaj\"),\r\n  deviceSelector,\r\n  elt(\"label\", {}, \"Početni datum i vrijeme\"),\r\n  startDate,\r\n  elt(\"label\", {}, \"Završni datum i vrijeme\"),\r\n  endDate\r\n);\r\nconst form = elt(\"form\", {}, fielset);\r\ndocument.body.appendChild(form);\r\n//--\r\n//status info\r\nconst status = elt(\"p\", {}, \"Preuzimam podatke ...\");\r\ndocument.body.appendChild(status);\r\n//--\r\n//download data\r\nconst download = elt(\r\n  \"a\",\r\n  {\r\n    href: \"data:text/plain;charset=utf-8,\" + encodeURIComponent(\"\"),\r\n    download: `${\r\n      deviceSelector.options[deviceSelector.selectedIndex].text\r\n    }_${dayjs(startDate.value).format(\"DD.MM.YYYY HH:mm\")}_${dayjs(\r\n      endDate.value\r\n    ).format(\"DD.MM.YYYY HH:mm\")}.csv`,\r\n  },\r\n  \"Preuzmi...\"\r\n);\r\nconst dwlForm = elt(\r\n  \"form\",\r\n  { style: \"display:none\" },\r\n  elt(\"fieldset\", {}, download)\r\n);\r\ndocument.body.appendChild(dwlForm);\r\n//--\r\n// graph\r\nconst canvas = elt(\"canvas\", { height: \"100%\", width: \"100%\" });\r\nconst graphForm = elt(\r\n  \"form\",\r\n  { style: \"display:none\" },\r\n  elt(\"fieldset\", { style: \"width:600px\" }, canvas)\r\n);\r\ndocument.body.appendChild(graphForm);\r\nconst ctx = canvas.getContext(\"2d\");\r\nconst config = {\r\n  type: \"line\",\r\n  data: {\r\n    datasets: [\r\n      {\r\n        label: \"tlak bar\",\r\n        yAxisID: \"Pressure\",\r\n        fill: false,\r\n        backgroundColor: \"white\",\r\n        borderColor: \"red\",\r\n        borderWidth: 1,\r\n        radius: 2,\r\n        data: [],\r\n      },\r\n    ],\r\n  },\r\n  options: {\r\n    scales: {\r\n      x: [\r\n        {\r\n          type: \"time\",\r\n        },\r\n      ],\r\n    },\r\n  }\r\n};\r\nconst chart = new Chart(ctx,config);\r\n\r\n//--\r\n//tabular data report\r\nconst tbody = elt(\"tbody\", {});\r\nconst tbl = elt(\r\n  \"table\",\r\n  {},\r\n  elt(\r\n    \"thead\",\r\n    {},\r\n    elt(\r\n      \"tr\",\r\n      {},\r\n      elt(\"th\", {}, \"Datum\"),\r\n      elt(\"th\", {}, \"Vrijeme\"),\r\n      elt(\"th\", {}, \"Tlak bar\"),\r\n      elt(\"th\", {}, \"Protok l/s\")\r\n    )\r\n  ),\r\n  tbody\r\n);\r\nconst tblForm = elt(\r\n  \"form\",\r\n  { style: \"display:none\" },\r\n  elt(\"fieldset\", {}, tbl)\r\n);\r\ndocument.body.appendChild(tblForm);\r\n//--\r\n//req data on input form  change\r\nreq(); //for initial page\r\nform.addEventListener(\"change\", (evt) => {\r\n  req(); //request data\r\n});\r\n//--\r\nfunction req() {\r\n  /*\r\n   reads value from UX: deviceSelector,startDate,endDate;\r\n   sets display style 'none' on req received: status\r\n   call on change\r\n  */\r\n  /* console.clear();\r\n  console.log(\r\n    \"...requesting data for: \",\r\n    deviceSelector.value,\r\n    startDate.value,\r\n    endDate.value\r\n  ); */\r\n  //UX results\r\n  status.style.display = \"inline\";\r\n  status.innerText = \"Preuzimam podatke ...\";\r\n  tblForm.style.display = \"none\";\r\n  dwlForm.style.display = \"none\";\r\n  //--\r\n  const pressurePromise = fetch(\r\n    \"https://gis.edc.hr/imagisth/threport/pressure_th_mt?device_id=eq.\" +\r\n      deviceSelector.value\r\n  ); // dates not used in req\r\n  const flowPromise = fetch(\r\n    \"https://gis.edc.hr/imagisth/threport/flow_mt_th\" //more devices ?\r\n  ); // device && dates not used in req\r\n  Promise.all([pressurePromise, flowPromise]).then((r) => {\r\n    Promise.all([r[0].json(), r[1].json()]).then((r) => {\r\n      const m = []; //measures calculated\r\n      for (const value of r[0]) {\r\n        const f = r[1].filter((x) => x.date_taken === value.date_taken); // 2 flow messages for date_taken\r\n        const hi = f.find((x) => x.category_id == 11); // hi bit\r\n        let low = f.find((x) => x.category_id == 10); //low bit\r\n        low = hi.raw_value * 65536 + low.raw_value; //sum values\r\n        low = Math.round((low * 0.01 + Number.EPSILON) * 100) / 100; //round value 2 decimals\r\n        const t = dayjs.utc(value.date_taken.split(\"+\")[0]).local(); //.format('DD.MM.YYYY HH:mm')// convert to local time\r\n        m.push({ timestamp: t, pressure: value.pressure, flowSum: low });\r\n      }\r\n      for (let i = 0; i < m.length; i++) {\r\n        if (i === 0) {\r\n          //first row, can't calculate diff, set 0\r\n          m[i].timeDiff = 0;\r\n          m[i].flowDiff = 0;\r\n        } else {\r\n          m[i].timeDiff = m[i].timestamp.diff(m[i - 1].timestamp) / 60000; //miliseconds -> min\r\n          m[i].flowDiff =\r\n            ((m[i].flowSum - m[i - 1].flowSum) * 60) / m[i].timeDiff / 3.6; // l/s\r\n        }\r\n      }\r\n      const p = period(m);\r\n      if (p.length === 0) {\r\n        status.innerText = \"Nema podataka!\";\r\n        tbody.innerHTML = \"\";\r\n      } else {\r\n        //console\r\n        /* console.clear();\r\n        console.log(p); */\r\n        //status\r\n        status.style.display = \"none\";\r\n        //download\r\n        dwlForm.style.display = \"block\";\r\n        download.href =\r\n          \"data:text/plain;charset=utf-8,\" + encodeURIComponent(csv(p));\r\n        download.download = `${\r\n          deviceSelector.options[deviceSelector.selectedIndex].text\r\n        }_${dayjs(startDate.value).format(\"DD.MM.YYYY HH:mm\")}_${dayjs(\r\n          endDate.value\r\n        ).format(\"DD.MM.YYYY HH:mm\")}.csv`;\r\n        //graph\r\n        graphForm.style.display = \"block\";\r\n        //const chart = new Chart(ctx,config);\r\n\r\n\r\n        //graphIt(p);\r\n\r\n\r\n\r\n        //table\r\n        tblForm.style.display = \"block\";\r\n        fillTbl(tbody, p);\r\n      }\r\n    });\r\n  });\r\n}\r\nfunction graphIt(p) {\r\n  chart.destroy();\r\n  \r\n  for (const value of p) {\r\n    chart.data.datasets[0].data.push({\r\n      x: value.timestamp.format(\"DD/MM/YYYY HH:mm:ss\"),\r\n      y: value.pressure,\r\n    });\r\n    chart.update();\r\n  }\r\n}\r\nfunction csv(p) {\r\n  //values as csv text\r\n  let s =\r\n    \"Datum;Vrijeme;Tlak bar;Protok l/s;Sumarni protok m3;Stanje vodomjera m3\\n\";\r\n  const flowStart = p[0].flowSum;\r\n  for (const [index, value] of p.entries()) {\r\n    let pstring = value.pressure.toFixed(2);\r\n    pstring = pstring.replace(\".\", \",\");\r\n    let fstring = value.flowDiff.toFixed(2);\r\n    fstring = fstring.replace(\".\", \",\");\r\n    fSumString = (value.flowSum - flowStart).toFixed(2);\r\n    fSumString = fSumString.replace(\".\", \",\");\r\n    stanje = value.flowSum.toFixed(0);\r\n    s += `${value.timestamp.format(\"DD.MM.YYYY\")};${value.timestamp.format(\r\n      \"HH:mm:ss\"\r\n    )};${pstring};${fstring};${fSumString};${stanje}\\n`;\r\n  }\r\n  return s;\r\n}\r\nfunction fillTbl(tbody, p) {\r\n  tbody.innerHTML = \"\";\r\n  p.reverse(); //last data first to show\r\n  for (const value of p) {\r\n    tbody.appendChild(\r\n      elt(\r\n        \"tr\",\r\n        {},\r\n        elt(\"td\", {}, value.timestamp.format(\"DD.MM.YYYY\")),\r\n        elt(\"td\", {}, value.timestamp.format(\"HH:mm:ss\")),\r\n        elt(\"td\", {}, value.pressure.toFixed(2)),\r\n        elt(\"td\", {}, value.flowDiff.toFixed(2))\r\n      )\r\n    );\r\n  }\r\n}\r\nfunction period(m) {\r\n  //reads startDate & endDate from UX\r\n  const p = [];\r\n  for (const value of m) {\r\n    if (\r\n      value.timestamp.isAfter(dayjs(startDate.value)) &&\r\n      value.timestamp.isBefore(dayjs(endDate.value))\r\n    )\r\n      p.push(value);\r\n  }\r\n  return p;\r\n}\r\n"],"names":["$parcel$interopDefault","a","__esModule","default","$d365a869e58525ef8336e0cbc66bd7e8$export$elt","type","props","children","dom","document","createElement","Object","assign","child","appendChild","createTextNode","t","e","n","r","i","s","u","o","f","h","c","d","name","weekdays","split","months","$","String","length","Array","join","l","z","utcOffset","Math","abs","floor","m","date","year","month","clone","add","ceil","p","M","y","w","D","ms","Q","toLowerCase","replace","S","v","args","arguments","g","locale","$L","utc","$u","x","$x","$offset","this","parse","prototype","$d","Date","NaN","test","match","substring","UTC","init","$y","getFullYear","$M","getMonth","$D","getDate","$W","getDay","$H","getHours","$m","getMinutes","$s","getSeconds","$ms","getMilliseconds","$utils","isValid","toString","isSame","startOf","endOf","isAfter","isBefore","$g","set","unix","valueOf","getTime","toDate","apply","slice","$locale","weekStart","$set","min","daysInMonth","get","Number","round","subtract","format","substr","meridiem","YY","YYYY","MM","MMM","monthsShort","MMMM","DD","dd","weekdaysMin","ddd","weekdaysShort","dddd","H","HH","hh","A","mm","ss","SSS","Z","getTimezoneOffset","diff","toJSON","toISOString","toUTCString","forEach","extend","$i","isDayjs","en","Ls","$c60a9b3523373c1eee70d326e6d88034$exports","dayjs","$721ea9adabd916a479f0c177073955f9$exports","dayjs_plugin_utc","local","call","getUTCFullYear","getUTCMonth","getUTCDate","getUTCDay","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","$localOffset","isUTC","$2e1d8df70e8623deaf0b840c3f455d5a$export$r","window","callback","requestAnimationFrame","$2e1d8df70e8623deaf0b840c3f455d5a$export$I","fn","thisArg","updateFn","updateArgs","ticking","rest","$2e1d8df70e8623deaf0b840c3f455d5a$export$X","align","$2e1d8df70e8623deaf0b840c3f455d5a$export$Y","start","end","$2e1d8df70e8623deaf0b840c3f455d5a$export$a7","id","$2e1d8df70e8623deaf0b840c3f455d5a$export$j","value","$2e1d8df70e8623deaf0b840c3f455d5a$export$b","isArray","$2e1d8df70e8623deaf0b840c3f455d5a$export$i","$2e1d8df70e8623deaf0b840c3f455d5a$export$g","isFinite","$2e1d8df70e8623deaf0b840c3f455d5a$export$M","defaultValue","$2e1d8df70e8623deaf0b840c3f455d5a$export$v","$2e1d8df70e8623deaf0b840c3f455d5a$export$o","dimension","endsWith","parseFloat","$2e1d8df70e8623deaf0b840c3f455d5a$export$N","$2e1d8df70e8623deaf0b840c3f455d5a$export$D","loopable","reverse","len","keys","$2e1d8df70e8623deaf0b840c3f455d5a$export$ac","a0","a1","ilen","v0","v1","datasetIndex","index","$2e1d8df70e8623deaf0b840c3f455d5a$export$aI","source","map","target","create","klen","k","$2e1d8df70e8623deaf0b840c3f455d5a$var$isValidKey","key","indexOf","$2e1d8df70e8623deaf0b840c3f455d5a$export$aJ","options","tval","sval","$2e1d8df70e8623deaf0b840c3f455d5a$export$$","sources","merger","$2e1d8df70e8623deaf0b840c3f455d5a$export$a6","$2e1d8df70e8623deaf0b840c3f455d5a$export$aK","hasOwnProperty","$2e1d8df70e8623deaf0b840c3f455d5a$var$indexOfDotOrLength","idx","$2e1d8df70e8623deaf0b840c3f455d5a$export$f","obj","pos","$2e1d8df70e8623deaf0b840c3f455d5a$export$a0","str","charAt","toUpperCase","$2e1d8df70e8623deaf0b840c3f455d5a$export$h","$2e1d8df70e8623deaf0b840c3f455d5a$export$a2","$2e1d8df70e8623deaf0b840c3f455d5a$export$P","PI","$2e1d8df70e8623deaf0b840c3f455d5a$export$T","$2e1d8df70e8623deaf0b840c3f455d5a$export$aS","$2e1d8df70e8623deaf0b840c3f455d5a$export$aT","POSITIVE_INFINITY","$2e1d8df70e8623deaf0b840c3f455d5a$export$aU","$2e1d8df70e8623deaf0b840c3f455d5a$export$H","$2e1d8df70e8623deaf0b840c3f455d5a$export$aV","$2e1d8df70e8623deaf0b840c3f455d5a$export$aW","$2e1d8df70e8623deaf0b840c3f455d5a$export$K","log10","$2e1d8df70e8623deaf0b840c3f455d5a$export$s","sign","$2e1d8df70e8623deaf0b840c3f455d5a$export$aA","range","niceRange","pow","fraction","$2e1d8df70e8623deaf0b840c3f455d5a$export$w","isNaN","$2e1d8df70e8623deaf0b840c3f455d5a$export$aC","epsilon","$2e1d8df70e8623deaf0b840c3f455d5a$export$az","array","property","max","$2e1d8df70e8623deaf0b840c3f455d5a$export$t","degrees","$2e1d8df70e8623deaf0b840c3f455d5a$export$Q","radians","$2e1d8df70e8623deaf0b840c3f455d5a$export$ay","pt1","pt2","sqrt","$2e1d8df70e8623deaf0b840c3f455d5a$export$aX","b","$2e1d8df70e8623deaf0b840c3f455d5a$export$as","$2e1d8df70e8623deaf0b840c3f455d5a$export$q","angle","angleToStart","angleToEnd","startToAngle","endToAngle","$2e1d8df70e8623deaf0b840c3f455d5a$export$x","$2e1d8df70e8623deaf0b840c3f455d5a$var$atEdge","$2e1d8df70e8623deaf0b840c3f455d5a$var$elasticIn","sin","$2e1d8df70e8623deaf0b840c3f455d5a$var$elasticOut","$2e1d8df70e8623deaf0b840c3f455d5a$export$e","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","$2e1d8df70e8623deaf0b840c3f455d5a$var$map","0","1","2","3","4","5","6","7","8","9","B","C","E","F","$2e1d8df70e8623deaf0b840c3f455d5a$var$hex","$2e1d8df70e8623deaf0b840c3f455d5a$var$h1","$2e1d8df70e8623deaf0b840c3f455d5a$var$h2","$2e1d8df70e8623deaf0b840c3f455d5a$var$eq","$2e1d8df70e8623deaf0b840c3f455d5a$var$hexString","$2e1d8df70e8623deaf0b840c3f455d5a$var$isShort","$2e1d8df70e8623deaf0b840c3f455d5a$var$round","$2e1d8df70e8623deaf0b840c3f455d5a$var$lim","$2e1d8df70e8623deaf0b840c3f455d5a$var$p2b","$2e1d8df70e8623deaf0b840c3f455d5a$var$n2b","$2e1d8df70e8623deaf0b840c3f455d5a$var$b2n","$2e1d8df70e8623deaf0b840c3f455d5a$var$n2p","$2e1d8df70e8623deaf0b840c3f455d5a$var$RGB_RE","$2e1d8df70e8623deaf0b840c3f455d5a$var$HUE_RE","$2e1d8df70e8623deaf0b840c3f455d5a$var$hsl2rgbn","$2e1d8df70e8623deaf0b840c3f455d5a$var$hsv2rgbn","$2e1d8df70e8623deaf0b840c3f455d5a$var$hwb2rgbn","rgb","$2e1d8df70e8623deaf0b840c3f455d5a$var$rgb2hsl","$2e1d8df70e8623deaf0b840c3f455d5a$var$calln","$2e1d8df70e8623deaf0b840c3f455d5a$var$hsl2rgb","$2e1d8df70e8623deaf0b840c3f455d5a$var$hue","$2e1d8df70e8623deaf0b840c3f455d5a$var$hueParse","exec","p1","p2","$2e1d8df70e8623deaf0b840c3f455d5a$var$hwb2rgb","$2e1d8df70e8623deaf0b840c3f455d5a$var$hsv2rgb","$2e1d8df70e8623deaf0b840c3f455d5a$var$map$1","Y","X","W","V","U","T","R","P","O","N","L","K","G","I","J","$2e1d8df70e8623deaf0b840c3f455d5a$var$names","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","$2e1d8df70e8623deaf0b840c3f455d5a$var$names$1","$2e1d8df70e8623deaf0b840c3f455d5a$var$nameParse","unpacked","tkeys","j","ok","nk","parseInt","$2e1d8df70e8623deaf0b840c3f455d5a$var$unpack","transparent","$2e1d8df70e8623deaf0b840c3f455d5a$var$modHSL","ratio","tmp","$2e1d8df70e8623deaf0b840c3f455d5a$var$clone","proto","$2e1d8df70e8623deaf0b840c3f455d5a$var$fromObject","input","$2e1d8df70e8623deaf0b840c3f455d5a$var$functionParse","$2e1d8df70e8623deaf0b840c3f455d5a$var$rgbParse","$2e1d8df70e8623deaf0b840c3f455d5a$var$Color","constructor","ret","_rgb","_valid","rgbString","hexString","hslString","$2e1d8df70e8623deaf0b840c3f455d5a$var$hslString","mix","color","weight","me","c1","c2","w2","w1","alpha","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","$2e1d8df70e8623deaf0b840c3f455d5a$var$rotate","$2e1d8df70e8623deaf0b840c3f455d5a$var$index_esm","$2e1d8df70e8623deaf0b840c3f455d5a$var$isPatternOrGradient","CanvasGradient","CanvasPattern","$2e1d8df70e8623deaf0b840c3f455d5a$export$c","$2e1d8df70e8623deaf0b840c3f455d5a$export$aH","$2e1d8df70e8623deaf0b840c3f455d5a$export$Z","$2e1d8df70e8623deaf0b840c3f455d5a$export$a1","$2e1d8df70e8623deaf0b840c3f455d5a$var$getScope$1","node","$2e1d8df70e8623deaf0b840c3f455d5a$var$set","root","scope","values","$2e1d8df70e8623deaf0b840c3f455d5a$export$d","_descriptors","animation","undefined","backgroundColor","borderColor","datasets","devicePixelRatio","context","chart","platform","getDevicePixelRatio","elements","events","font","family","size","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","describe","override","route","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","$2e1d8df70e8623deaf0b840c3f455d5a$var$Defaults","_scriptable","startsWith","_indexable","_fallback","$2e1d8df70e8623deaf0b840c3f455d5a$export$R","data","gc","longest","string","textWidth","measureText","width","push","$2e1d8df70e8623deaf0b840c3f455d5a$export$aE","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","splice","$2e1d8df70e8623deaf0b840c3f455d5a$export$U","pixel","currentDevicePixelRatio","halfWidth","$2e1d8df70e8623deaf0b840c3f455d5a$export$aa","canvas","getContext","resetTransform","clearRect","height","$2e1d8df70e8623deaf0b840c3f455d5a$export$an","xOffset","yOffset","cornerRadius","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","$2e1d8df70e8623deaf0b840c3f455d5a$export$A","point","area","margin","left","right","top","bottom","$2e1d8df70e8623deaf0b840c3f455d5a$export$k","clip","$2e1d8df70e8623deaf0b840c3f455d5a$export$m","$2e1d8df70e8623deaf0b840c3f455d5a$export$al","previous","flip","midpoint","$2e1d8df70e8623deaf0b840c3f455d5a$export$am","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","$2e1d8df70e8623deaf0b840c3f455d5a$export$V","text","opts","lines","strokeWidth","strokeColor","line","translation","fillStyle","textAlign","textBaseline","strokeStyle","lineWidth","strokeText","maxWidth","fillText","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","$2e1d8df70e8623deaf0b840c3f455d5a$export$ao","topLeft","bottomLeft","bottomRight","topRight","$2e1d8df70e8623deaf0b840c3f455d5a$var$LINE_HEIGHT","RegExp","$2e1d8df70e8623deaf0b840c3f455d5a$var$FONT_STYLE","$2e1d8df70e8623deaf0b840c3f455d5a$export$aR","matches","$2e1d8df70e8623deaf0b840c3f455d5a$export$ae","objProps","read","prop","$2e1d8df70e8623deaf0b840c3f455d5a$export$ap","$2e1d8df70e8623deaf0b840c3f455d5a$export$aq","$2e1d8df70e8623deaf0b840c3f455d5a$export$C","$2e1d8df70e8623deaf0b840c3f455d5a$export$W","fallback","console","warn","$2e1d8df70e8623deaf0b840c3f455d5a$export$aM","$2e1d8df70e8623deaf0b840c3f455d5a$export$a","inputs","info","cacheable","$2e1d8df70e8623deaf0b840c3f455d5a$export$aG","table","cmp","mid","hi","lo","$2e1d8df70e8623deaf0b840c3f455d5a$export$y","$2e1d8df70e8623deaf0b840c3f455d5a$export$B","$2e1d8df70e8623deaf0b840c3f455d5a$var$arrayEvents","$2e1d8df70e8623deaf0b840c3f455d5a$export$u","listener","stub","_chartjs","listeners","$2e1d8df70e8623deaf0b840c3f455d5a$export$_","items","Set","result","item","$2e1d8df70e8623deaf0b840c3f455d5a$export$a4","scopes","prefixes","rootScopes","getTarget","$2e1d8df70e8623deaf0b840c3f455d5a$var$_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","$2e1d8df70e8623deaf0b840c3f455d5a$var$_cached","proxy","prefix","$2e1d8df70e8623deaf0b840c3f455d5a$var$readKey","$2e1d8df70e8623deaf0b840c3f455d5a$var$needsSubResolver","$2e1d8df70e8623deaf0b840c3f455d5a$var$createSubResolver","$2e1d8df70e8623deaf0b840c3f455d5a$var$_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","has","$2e1d8df70e8623deaf0b840c3f455d5a$var$getKeysFromAllScopes","includes","ownKeys","_storage","$2e1d8df70e8623deaf0b840c3f455d5a$export$a3","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","$2e1d8df70e8623deaf0b840c3f455d5a$export$a5","setContext","receiver","descriptors","isScriptable","Error","delete","$2e1d8df70e8623deaf0b840c3f455d5a$var$_resolveScriptable","isIndexable","arr","filter","resolver","$2e1d8df70e8623deaf0b840c3f455d5a$var$_resolveArray","$2e1d8df70e8623deaf0b840c3f455d5a$var$_resolveWithContext","allKeys","configurable","defaults","scriptable","indexable","_allKeys","resolve","$2e1d8df70e8623deaf0b840c3f455d5a$var$resolveFallback","$2e1d8df70e8623deaf0b840c3f455d5a$var$getScope","parent","$2e1d8df70e8623deaf0b840c3f455d5a$var$addScopes","parentScopes","parentFallback","allScopes","$2e1d8df70e8623deaf0b840c3f455d5a$var$addScopesFromKey","$2e1d8df70e8623deaf0b840c3f455d5a$var$resolveKeysFromAllScopes","$2e1d8df70e8623deaf0b840c3f455d5a$var$EPSILON","EPSILON","$2e1d8df70e8623deaf0b840c3f455d5a$var$getPoint","points","skip","$2e1d8df70e8623deaf0b840c3f455d5a$export$aN","firstPoint","middlePoint","afterPoint","current","next","d01","d12","s01","s12","fa","fb","$2e1d8df70e8623deaf0b840c3f455d5a$export$aO","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDeltaX","alphaK","betaK","tauK","squaredMagnitude","$2e1d8df70e8623deaf0b840c3f455d5a$var$monotoneAdjust","deltaX","$2e1d8df70e8623deaf0b840c3f455d5a$var$monotoneCompute","$2e1d8df70e8623deaf0b840c3f455d5a$var$capControlPoint","pt","$2e1d8df70e8623deaf0b840c3f455d5a$export$af","loop","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","$2e1d8df70e8623deaf0b840c3f455d5a$var$capBezierPoints","$2e1d8df70e8623deaf0b840c3f455d5a$export$F","domNode","parentNode","host","$2e1d8df70e8623deaf0b840c3f455d5a$var$parseMaxStyle","styleValue","parentProperty","valueInPixels","$2e1d8df70e8623deaf0b840c3f455d5a$var$getComputedStyle","element","getComputedStyle","$2e1d8df70e8623deaf0b840c3f455d5a$var$positions","$2e1d8df70e8623deaf0b840c3f455d5a$var$getPositionedStyle","styles","suffix","$2e1d8df70e8623deaf0b840c3f455d5a$export$z","evt","borderBox","boxSizing","paddings","borders","box","native","touches","offsetX","offsetY","shadowRoot","$2e1d8df70e8623deaf0b840c3f455d5a$var$useOffsetPos","getBoundingClientRect","clientX","clientY","$2e1d8df70e8623deaf0b840c3f455d5a$var$getCanvasPosition","$2e1d8df70e8623deaf0b840c3f455d5a$var$round1","$2e1d8df70e8623deaf0b840c3f455d5a$export$E","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","$2e1d8df70e8623deaf0b840c3f455d5a$var$getContainerSize","$2e1d8df70e8623deaf0b840c3f455d5a$export$a9","forceRatio","forceStyle","pixelRatio","setTransform","$2e1d8df70e8623deaf0b840c3f455d5a$export$J","passiveSupported","addEventListener","removeEventListener","$2e1d8df70e8623deaf0b840c3f455d5a$export$G","el","getPropertyValue","$2e1d8df70e8623deaf0b840c3f455d5a$export$aP","$2e1d8df70e8623deaf0b840c3f455d5a$export$ak","$2e1d8df70e8623deaf0b840c3f455d5a$export$ai","$2e1d8df70e8623deaf0b840c3f455d5a$export$aj","cp1","cp2","$2e1d8df70e8623deaf0b840c3f455d5a$var$intlCache","Map","$2e1d8df70e8623deaf0b840c3f455d5a$export$p","num","cacheKey","JSON","stringify","formatter","Intl","NumberFormat","$2e1d8df70e8623deaf0b840c3f455d5a$var$getNumberFormat","$2e1d8df70e8623deaf0b840c3f455d5a$export$at","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","$2e1d8df70e8623deaf0b840c3f455d5a$var$getRightToLeftAdapter","_itemWidth","$2e1d8df70e8623deaf0b840c3f455d5a$export$au","direction","original","getPropertyPriority","setProperty","prevTextDirection","$2e1d8df70e8623deaf0b840c3f455d5a$export$aw","$2e1d8df70e8623deaf0b840c3f455d5a$var$propertyFn","between","compare","normalize","$2e1d8df70e8623deaf0b840c3f455d5a$var$normalizeSegment","count","$2e1d8df70e8623deaf0b840c3f455d5a$export$ar","segment","bounds","startBound","endBound","$2e1d8df70e8623deaf0b840c3f455d5a$var$getSegment","prevValue","inside","subStart","shouldStart","shouldStop","$2e1d8df70e8623deaf0b840c3f455d5a$export$ah","segments","sub","$2e1d8df70e8623deaf0b840c3f455d5a$var$splitByStyles","segmentOptions","prevStyle","$2e1d8df70e8623deaf0b840c3f455d5a$var$readStyle","p0","$2e1d8df70e8623deaf0b840c3f455d5a$var$styleChanged","$2e1d8df70e8623deaf0b840c3f455d5a$var$doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","$04e266141aec77a9048733ce68317cdf$export$animator","_request","_charts","_running","_lastDate","_notify","anims","callbacks","numSteps","duration","initial","currentStep","_refresh","_update","now","remaining","running","draw","_active","_total","tick","pop","_getAnims","charts","complete","progress","listen","event","cb","reduce","acc","cur","_duration","stop","cancel","remove","$04e266141aec77a9048733ce68317cdf$var$transparent","$04e266141aec77a9048733ce68317cdf$var$interpolators","boolean","from","to","factor","c0","valid","number","$04e266141aec77a9048733ce68317cdf$export$Animation","cfg","currentValue","_fn","_easing","easing","_start","delay","_loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","$04e266141aec77a9048733ce68317cdf$var$animationOptions","colors","properties","$04e266141aec77a9048733ce68317cdf$var$colors","numbers","$04e266141aec77a9048733ce68317cdf$var$numbers","resize","show","animations","visible","hide","$04e266141aec77a9048733ce68317cdf$export$Animations","config","_chart","_properties","configure","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","$04e266141aec77a9048733ce68317cdf$var$resolveTargetOptions","_createAnimations","anim","all","$04e266141aec77a9048733ce68317cdf$var$awaitAll","then","$04e266141aec77a9048733ce68317cdf$var$scaleClip","allowedOverflow","$04e266141aec77a9048733ce68317cdf$var$getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","$04e266141aec77a9048733ce68317cdf$var$applyStack","stack","dsIndex","singleMode","otherValue","$04e266141aec77a9048733ce68317cdf$var$isStacked","meta","stacked","$04e266141aec77a9048733ce68317cdf$var$getOrCreateStack","stacks","stackKey","indexValue","subStack","$04e266141aec77a9048733ce68317cdf$var$getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","$04e266141aec77a9048733ce68317cdf$var$updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","indexScale","valueScale","$04e266141aec77a9048733ce68317cdf$var$getStackKey","_top","_bottom","$04e266141aec77a9048733ce68317cdf$var$getFirstScaleId","shift","$04e266141aec77a9048733ce68317cdf$var$clearStacks","_parsed","$04e266141aec77a9048733ce68317cdf$var$isDirectUpdateMode","$04e266141aec77a9048733ce68317cdf$var$cloneIfNotShared","cached","shared","$04e266141aec77a9048733ce68317cdf$export$DatasetController","_ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","$context","initialize","linkScales","_stacked","addElements","updateIndex","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","adata","$04e266141aec77a9048733ce68317cdf$var$convertObjectDataToArray","isExtensible","defineProperty","base","object","datasetElementType","buildOrUpdateElements","resetNewElements","stackChanged","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","_sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","applyStack","updateRangeFromParsed","parsedValue","getMinMax","canStack","otherScale","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","$04e266141aec77a9048733ce68317cdf$var$getUserBounds","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","$04e266141aec77a9048733ce68317cdf$var$toClip","$04e266141aec77a9048733ce68317cdf$var$defaultClip","chartArea","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","$04e266141aec77a9048733ce68317cdf$var$createDataContext","$04e266141aec77a9048733ce68317cdf$var$createDatasetContext","_resolveElementOptions","dataElementType","elementType","sharing","datasetElementScopeKeys","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","updateElement","updateSharedOptions","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_onDataPush","_onDataPop","_onDataShift","_onDataSplice","_onDataUnshift","$04e266141aec77a9048733ce68317cdf$var$computeMinSampleSize","_cache","$bar","metas","concat","sort","$04e266141aec77a9048733ce68317cdf$var$getAllScaleValues","curr","_length","updateMinAndPrev","getPixelForValue","ticks","getPixelForTick","$04e266141aec77a9048733ce68317cdf$var$parseValue","entry","startValue","endValue","barStart","barEnd","_custom","$04e266141aec77a9048733ce68317cdf$var$parseFloatBar","$04e266141aec77a9048733ce68317cdf$var$parseArrayOrPrimitive","$04e266141aec77a9048733ce68317cdf$var$isFloatBar","custom","$04e266141aec77a9048733ce68317cdf$export$BarController","iAxisKey","vAxisKey","super","bars","getBasePixel","horizontal","isHorizontal","ruler","_getRuler","firstOpts","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","enableBorderRadius","center","_getStacks","last","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","grouped","categoryPercentage","barPercentage","baseValue","minBarLength","floating","getDataVisibility","actualBase","halfGrid","getLineWidthForValue","skipNull","maxBarThickness","Infinity","percent","chunk","$04e266141aec77a9048733ce68317cdf$var$computeFlexCategoryTraits","thickness","$04e266141aec77a9048733ce68317cdf$var$computeFitCategoryTraits","stackIndex","rects","overrides","_index_","offset","grid","_value_","beginAtZero","$04e266141aec77a9048733ce68317cdf$export$BubbleController","getPixelForDecimal","tooltip","title","$04e266141aec77a9048733ce68317cdf$export$DoughnutController","innerRadius","outerRadius","_getRotation","_getCircumference","circumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","cutout","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","$04e266141aec77a9048733ce68317cdf$var$getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","legend","generateLabels","hidden","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","$04e266141aec77a9048733ce68317cdf$export$LineController","_dataset","animationsDisabled","pointCount","$04e266141aec77a9048733ce68317cdf$var$getStartAndCountOfVisiblePoints","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","$04e266141aec77a9048733ce68317cdf$var$scaleRangesChanged","_decimated","animated","maxGapLength","directUpdate","prevParsed","nullData","border","lastPoint","updateControlPoints","$04e266141aec77a9048733ce68317cdf$export$PolarAreaController","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","$04e266141aec77a9048733ce68317cdf$export$PieController","$04e266141aec77a9048733ce68317cdf$export$RadarController","_fullLoop","pointPosition","getPointPositionForValue","$04e266141aec77a9048733ce68317cdf$export$ScatterController","$04e266141aec77a9048733ce68317cdf$var$abstract","$04e266141aec77a9048733ce68317cdf$var$DateAdapter","formats","timestamp","amount","unit","weekday","members","$04e266141aec77a9048733ce68317cdf$export$_adapters","_date","$04e266141aec77a9048733ce68317cdf$var$getRelativePosition","$04e266141aec77a9048733ce68317cdf$var$binarySearch","metaset","lookupMethod","_reversePixels","getRange","$04e266141aec77a9048733ce68317cdf$var$optimizedEvaluateItems","position","handler","getSortedVisibleDatasetMetas","$04e266141aec77a9048733ce68317cdf$var$getIntersectItems","useFinalPosition","_minPadding","inRange","$04e266141aec77a9048733ce68317cdf$var$getNearestItems","distanceMetric","useX","useY","deltaY","$04e266141aec77a9048733ce68317cdf$var$getDistanceMetricForAxis","minDistance","getCenterPoint","distance","$04e266141aec77a9048733ce68317cdf$var$getAxisItems","rangeMethod","intersectsItem","$04e266141aec77a9048733ce68317cdf$var$evaluateAllVisibleItems","$04e266141aec77a9048733ce68317cdf$export$Interaction","modes","nearest","$04e266141aec77a9048733ce68317cdf$var$STATIC_POSITIONS","$04e266141aec77a9048733ce68317cdf$var$filterByPosition","$04e266141aec77a9048733ce68317cdf$var$filterDynamicPositionByAxis","$04e266141aec77a9048733ce68317cdf$var$sortByWeight","$04e266141aec77a9048733ce68317cdf$var$getCombinedMax","maxPadding","$04e266141aec77a9048733ce68317cdf$var$updateMaxPadding","boxPadding","$04e266141aec77a9048733ce68317cdf$var$updateDims","params","layout","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","$04e266141aec77a9048733ce68317cdf$var$getMargins","marginForPositions","positions","$04e266141aec77a9048733ce68317cdf$var$fitBoxes","boxes","refitBoxes","refit","fullSize","$04e266141aec77a9048733ce68317cdf$var$placeBoxes","userPadding","padding","$04e266141aec77a9048733ce68317cdf$export$layouts","addBox","_layers","removeBox","layoutItem","minPadding","availableWidth","availableHeight","layoutBoxes","$04e266141aec77a9048733ce68317cdf$var$wrapBoxes","wrap","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","$04e266141aec77a9048733ce68317cdf$var$buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","vBoxMaxWidth","hBoxMaxHeight","layouts","$04e266141aec77a9048733ce68317cdf$var$setLayoutDims","updatePos","change","$04e266141aec77a9048733ce68317cdf$var$handleMaxPadding","$04e266141aec77a9048733ce68317cdf$export$BasePlatform","acquireContext","releaseContext","getMaximumSize","isAttached","$04e266141aec77a9048733ce68317cdf$export$BasicPlatform","$04e266141aec77a9048733ce68317cdf$var$EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","$04e266141aec77a9048733ce68317cdf$var$isNullOrEmpty","$04e266141aec77a9048733ce68317cdf$var$eventListenerOptions","passive","$04e266141aec77a9048733ce68317cdf$var$removeListener","$04e266141aec77a9048733ce68317cdf$var$createAttachObserver","observer","MutationObserver","entries","addedNodes","added","observe","childList","subtree","$04e266141aec77a9048733ce68317cdf$var$createDetachObserver","removedNodes","$04e266141aec77a9048733ce68317cdf$var$drpListeningCharts","$04e266141aec77a9048733ce68317cdf$var$oldDevicePixelRatio","$04e266141aec77a9048733ce68317cdf$var$onWindowResize","dpr","$04e266141aec77a9048733ce68317cdf$var$createResizeObserver","ResizeObserver","contentRect","$04e266141aec77a9048733ce68317cdf$var$listenDevicePixelRatioChanges","$04e266141aec77a9048733ce68317cdf$var$releaseObserver","disconnect","$04e266141aec77a9048733ce68317cdf$var$unlistenDevicePixelRatioChanges","$04e266141aec77a9048733ce68317cdf$var$createProxyAndListen","$04e266141aec77a9048733ce68317cdf$var$fromNativeEvent","$04e266141aec77a9048733ce68317cdf$var$addListener","$04e266141aec77a9048733ce68317cdf$export$DomPlatform","renderHeight","getAttribute","renderWidth","$04e266141aec77a9048733ce68317cdf$var$EXPANDO_KEY","displayWidth","displayHeight","$04e266141aec77a9048733ce68317cdf$var$initCanvas","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","$04e266141aec77a9048733ce68317cdf$export$Element","tooltipPosition","getProps","hasValue","final","defaultRoutes","$04e266141aec77a9048733ce68317cdf$var$formatters","numeric","tickValue","notation","delta","maxTick","$04e266141aec77a9048733ce68317cdf$var$calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","$04e266141aec77a9048733ce68317cdf$export$Ticks","formatters","$04e266141aec77a9048733ce68317cdf$var$autoSkip","tickOpts","ticksLimit","maxTicksLimit","tickLength","_tickSize","maxScale","maxChart","_maxLength","$04e266141aec77a9048733ce68317cdf$var$determineMaxTicks","majorIndices","major","enabled","$04e266141aec77a9048733ce68317cdf$var$getMajorIndices","numMajorIndices","first","newTicks","$04e266141aec77a9048733ce68317cdf$var$skipMajors","evenMajorSpacing","$04e266141aec77a9048733ce68317cdf$var$getEvenSpacing","factors","$04e266141aec77a9048733ce68317cdf$var$calculateSpacing","avgMajorSpacing","$04e266141aec77a9048733ce68317cdf$var$skip","majorStart","majorEnd","grace","drawBorder","drawOnChartArea","drawTicks","tickWidth","tickColor","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","$04e266141aec77a9048733ce68317cdf$var$offsetFromEdge","edge","$04e266141aec77a9048733ce68317cdf$var$sample","numItems","increment","$04e266141aec77a9048733ce68317cdf$var$getPixelForGridLine","offsetGridLines","validIndex","lineValue","$04e266141aec77a9048733ce68317cdf$var$getTickMarkLength","$04e266141aec77a9048733ce68317cdf$var$getTitleHeight","$04e266141aec77a9048733ce68317cdf$var$titleAlign","$04e266141aec77a9048733ce68317cdf$var$reverseAlign","$04e266141aec77a9048733ce68317cdf$export$Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","getTicks","xLabels","yLabels","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","beforeFit","fit","afterFit","afterUpdate","startPixel","endPixel","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","$04e266141aec77a9048733ce68317cdf$var$garbageCollect","valueAt","getValueForPixel","decimal","getDecimalForPixel","getBaseValue","$04e266141aec77a9048733ce68317cdf$var$createTickContext","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","backdrop","labelPadding","_computeLabelArea","drawBackground","fillRect","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","lastLineWidth","drawLabels","drawTitle","titleX","titleY","$04e266141aec77a9048733ce68317cdf$var$titleArgs","tz","gz","axisID","$04e266141aec77a9048733ce68317cdf$var$TypedRegistry","isForType","isPrototypeOf","register","parentScope","$04e266141aec77a9048733ce68317cdf$var$isIChartComponent","itemDefaults","routes","propertyParts","sourceName","sourceScope","parts","$04e266141aec77a9048733ce68317cdf$var$routeDefaults","$04e266141aec77a9048733ce68317cdf$var$registerDefaults","unregister","$04e266141aec77a9048733ce68317cdf$export$registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","$04e266141aec77a9048733ce68317cdf$var$PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","$04e266141aec77a9048733ce68317cdf$var$allPlugins","$04e266141aec77a9048733ce68317cdf$var$getOpts","$04e266141aec77a9048733ce68317cdf$var$pluginOpts","$04e266141aec77a9048733ce68317cdf$var$createDescriptors","previousDescriptors","some","pluginScopeKeys","$04e266141aec77a9048733ce68317cdf$var$getIndexAxis","datasetDefaults","$04e266141aec77a9048733ce68317cdf$var$determineAxis","scaleOptions","$04e266141aec77a9048733ce68317cdf$var$initOptions","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","defaultId","$04e266141aec77a9048733ce68317cdf$var$getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","$04e266141aec77a9048733ce68317cdf$var$getAxisFromDefaultScaleID","$04e266141aec77a9048733ce68317cdf$var$mergeScaleConfig","$04e266141aec77a9048733ce68317cdf$var$initData","$04e266141aec77a9048733ce68317cdf$var$keyCache","$04e266141aec77a9048733ce68317cdf$var$keysCached","$04e266141aec77a9048733ce68317cdf$var$cachedKeys","generate","$04e266141aec77a9048733ce68317cdf$var$addIfFound","$04e266141aec77a9048733ce68317cdf$var$Config","_config","$04e266141aec77a9048733ce68317cdf$var$initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","$04e266141aec77a9048733ce68317cdf$var$getResolver","$04e266141aec77a9048733ce68317cdf$var$needContext","resolverCache","$04e266141aec77a9048733ce68317cdf$var$KNOWN_POSITIONS","$04e266141aec77a9048733ce68317cdf$var$positionIsHorizontal","$04e266141aec77a9048733ce68317cdf$var$compare2Level","l1","l2","$04e266141aec77a9048733ce68317cdf$var$onAnimationsComplete","animationOptions","onComplete","$04e266141aec77a9048733ce68317cdf$var$onAnimationProgress","onProgress","$04e266141aec77a9048733ce68317cdf$var$isDomSupported","$04e266141aec77a9048733ce68317cdf$var$getCanvas","getElementById","$04e266141aec77a9048733ce68317cdf$var$instances","$04e266141aec77a9048733ce68317cdf$var$getChart","$04e266141aec77a9048733ce68317cdf$export$Chart","initialCanvas","existingChart","_initializePlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","resizeDelay","_initialize","error","bindEvents","OffscreenCanvas","_resizeBeforeDraw","_resize","newSize","oldRatio","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasetIndex","oldIndex","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","existingEvents","newEvents","unbindEvents","_updateLayout","_updateDatasets","_eventHandler","noArea","_idx","isFunction","_updateDataset","layers","_drawDatasets","_drawDataset","getElementsAtEventForMode","setDatasetVisibility","_updateDatasetVisibility","destroy","toBase64Image","toDataURL","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","_updateHoverStyles","replay","hoverOptions","deactivated","activated","eventFilter","_handleEvent","lastEvent","$04e266141aec77a9048733ce68317cdf$var$invalidatePlugins","instances","$04e266141aec77a9048733ce68317cdf$var$enumerable","$04e266141aec77a9048733ce68317cdf$var$clipArc","pixelMargin","angleMargin","$04e266141aec77a9048733ce68317cdf$var$parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","$04e266141aec77a9048733ce68317cdf$var$rThetaToXY","theta","$04e266141aec77a9048733ce68317cdf$var$pathArc","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","$04e266141aec77a9048733ce68317cdf$var$drawBorder","inner","lineJoin","fullCircles","$04e266141aec77a9048733ce68317cdf$var$drawFullCircleBorders","version","getChart","$04e266141aec77a9048733ce68317cdf$export$ArcElement","chartX","chartY","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","atan2","halfAngle","halfRadius","$04e266141aec77a9048733ce68317cdf$var$drawArc","$04e266141aec77a9048733ce68317cdf$var$setStyle","lineCap","$04e266141aec77a9048733ce68317cdf$var$lineTo","$04e266141aec77a9048733ce68317cdf$var$pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","$04e266141aec77a9048733ce68317cdf$var$pathSegment","lineMethod","stepped","$04e266141aec77a9048733ce68317cdf$var$getLineMethod","$04e266141aec77a9048733ce68317cdf$var$fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","$04e266141aec77a9048733ce68317cdf$var$_getSegmentMethod","$04e266141aec77a9048733ce68317cdf$var$usePath2D","Path2D","$04e266141aec77a9048733ce68317cdf$var$draw","path","_path","$04e266141aec77a9048733ce68317cdf$var$strokePathWithCache","segmentMethod","$04e266141aec77a9048733ce68317cdf$var$strokePathDirect","$04e266141aec77a9048733ce68317cdf$export$LineElement","_points","_segments","_pointsUpdated","$2e1d8df70e8623deaf0b840c3f455d5a$var$findStartAndEnd","$2e1d8df70e8623deaf0b840c3f455d5a$var$solidSegments","interpolate","_interpolate","$04e266141aec77a9048733ce68317cdf$var$_getInterpolationMethod","interpolated","pathSegment","$04e266141aec77a9048733ce68317cdf$var$inRange$1","hitRadius","$04e266141aec77a9048733ce68317cdf$export$PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","$04e266141aec77a9048733ce68317cdf$var$getBarBounds","bar","half","$04e266141aec77a9048733ce68317cdf$var$parseBorderSkipped","borderSkipped","$04e266141aec77a9048733ce68317cdf$var$parseEdge","orig","v2","$04e266141aec77a9048733ce68317cdf$var$startEnd","$04e266141aec77a9048733ce68317cdf$var$skipOrLimit","$04e266141aec77a9048733ce68317cdf$var$boundingRects","maxW","maxH","$04e266141aec77a9048733ce68317cdf$var$parseBorderWidth","maxR","enableBorder","$04e266141aec77a9048733ce68317cdf$var$parseBorderRadius","outer","$04e266141aec77a9048733ce68317cdf$var$inRange","skipX","skipY","$04e266141aec77a9048733ce68317cdf$var$addNormalRectPath","$04e266141aec77a9048733ce68317cdf$export$BarElement","addRectPath","$04e266141aec77a9048733ce68317cdf$var$positioners","average","eventPosition","nearestElement","tp","$04e266141aec77a9048733ce68317cdf$var$pushOrConcat","toPush","$04e266141aec77a9048733ce68317cdf$var$splitNewlines","$04e266141aec77a9048733ce68317cdf$var$createTooltipItem","$04e266141aec77a9048733ce68317cdf$var$getTooltipSize","body","footer","boxWidth","boxHeight","bodyFont","titleFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","$04e266141aec77a9048733ce68317cdf$var$determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","$04e266141aec77a9048733ce68317cdf$var$doesNotFitWithAlign","$04e266141aec77a9048733ce68317cdf$var$determineAlignment","$04e266141aec77a9048733ce68317cdf$var$determineYAlign","$04e266141aec77a9048733ce68317cdf$var$getBackgroundPoint","alignment","paddingAndSize","radiusAndPadding","$04e266141aec77a9048733ce68317cdf$var$alignX","$04e266141aec77a9048733ce68317cdf$var$alignY","$04e266141aec77a9048733ce68317cdf$var$getAlignedX","$04e266141aec77a9048733ce68317cdf$var$getBeforeAfterBodyLines","$04e266141aec77a9048733ce68317cdf$var$overrideCallbacks","$04e266141aec77a9048733ce68317cdf$var$Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","tooltipItems","getTitle","beforeTitle","afterTitle","getBeforeBody","getBody","bodyItems","scoped","beforeLabel","afterLabel","getAfterBody","getFooter","beforeFooter","afterFooter","_createItems","itemSort","labelColor","labelPointStyle","labelTextColor","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","rtlHelper","titleAlign","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","usePointStyle","drawOptions","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","hasTooltipContent","globalAlpha","textDirection","positionChanged","_positionChanged","handleEvent","positioners","$04e266141aec77a9048733ce68317cdf$var$findOrAddLabel","$04e266141aec77a9048733ce68317cdf$var$addIfString","lastIndexOf","$04e266141aec77a9048733ce68317cdf$export$CategoryScale","_startValue","_valueRange","$04e266141aec77a9048733ce68317cdf$var$validIndex","$04e266141aec77a9048733ce68317cdf$var$generateTicks$1","generationOptions","dataRange","step","precision","maxTicks","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","rounded","$04e266141aec77a9048733ce68317cdf$var$LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","$04e266141aec77a9048733ce68317cdf$export$LinearScale","$04e266141aec77a9048733ce68317cdf$var$isMajor","tickVal","$04e266141aec77a9048733ce68317cdf$export$LogarithmicScale","_zero","exp","endExp","endSignificand","significand","lastTick","$04e266141aec77a9048733ce68317cdf$var$generateTicks","$04e266141aec77a9048733ce68317cdf$var$getTickBackdropHeight","$04e266141aec77a9048733ce68317cdf$var$determineLimits","$04e266141aec77a9048733ce68317cdf$var$getTextAlignForAngle","$04e266141aec77a9048733ce68317cdf$var$adjustPointPositionForLabelHeight","textSize","$04e266141aec77a9048733ce68317cdf$var$pathRadiusLine","labelCount","getPointPosition","$04e266141aec77a9048733ce68317cdf$var$numberOrZero","param","$04e266141aec77a9048733ce68317cdf$export$RadialLinearScale","drawingArea","_pointLabels","_pointLabelItems","furthestLimits","furthestAngles","valueCount","plFont","hLimits","vLimits","_setReductions","tickBackdropHeight","outerDistance","extra","pointLabelPosition","$04e266141aec77a9048733ce68317cdf$var$fitWithPointLabels","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","distanceFromCenter","getBasePosition","getPointLabelPosition","$04e266141aec77a9048733ce68317cdf$var$drawPointLabels","gridLineOpts","$04e266141aec77a9048733ce68317cdf$var$drawRadiusLine","animate","angleLines.color","pointLabels.color","ticks.color","$04e266141aec77a9048733ce68317cdf$var$INTERVALS","millisecond","common","steps","second","minute","hour","day","week","quarter","$04e266141aec77a9048733ce68317cdf$var$UNITS","$04e266141aec77a9048733ce68317cdf$var$sorter","$04e266141aec77a9048733ce68317cdf$var$parse","adapter","_adapter","parser","isoWeekday","_parseOpts","$04e266141aec77a9048733ce68317cdf$var$determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","$04e266141aec77a9048733ce68317cdf$var$addTick","time","timestamps","$04e266141aec77a9048733ce68317cdf$var$ticksFromTimestamps","majorUnit","$04e266141aec77a9048733ce68317cdf$var$setMajorTicks","$04e266141aec77a9048733ce68317cdf$export$TimeScale","_unit","_majorUnit","_offsets","_normalized","adapters","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","$04e266141aec77a9048733ce68317cdf$var$determineUnitForFormatting","$04e266141aec77a9048733ce68317cdf$var$determineMajorUnit","initOffsets","getDecimalForValue","limit","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","$04e266141aec77a9048733ce68317cdf$var$interpolate","prevSource","nextSource","prevTarget","nextTarget","span","$04e266141aec77a9048733ce68317cdf$export$TimeSeriesScale","_table","_maxIndex","_getTimestampsForTable","buildLookupTable","$d3dfc027196df876626c47bef188877c$var$header","$d3dfc027196df876626c47bef188877c$var$deviceSelector","$d3dfc027196df876626c47bef188877c$var$startDate","$d3dfc027196df876626c47bef188877c$var$endDate","$d3dfc027196df876626c47bef188877c$var$fielset","$d3dfc027196df876626c47bef188877c$var$form","$d3dfc027196df876626c47bef188877c$var$status","$d3dfc027196df876626c47bef188877c$var$download","href","encodeURIComponent","download","selectedIndex","$c60a9b3523373c1eee70d326e6d88034$$interop$default","$d3dfc027196df876626c47bef188877c$var$dwlForm","$d3dfc027196df876626c47bef188877c$var$canvas","$d3dfc027196df876626c47bef188877c$var$graphForm","$d3dfc027196df876626c47bef188877c$var$chart","$d3dfc027196df876626c47bef188877c$var$config","$d3dfc027196df876626c47bef188877c$var$tbody","$d3dfc027196df876626c47bef188877c$var$tbl","$d3dfc027196df876626c47bef188877c$var$tblForm","$d3dfc027196df876626c47bef188877c$var$req","innerText","pressurePromise","fetch","flowPromise","json","date_taken","find","category_id","low","raw_value","pressure","flowSum","timeDiff","flowDiff","$d3dfc027196df876626c47bef188877c$var$period","innerHTML","flowStart","pstring","toFixed","fstring","fSumString","stanje","$d3dfc027196df876626c47bef188877c$var$csv","tbody","$d3dfc027196df876626c47bef188877c$var$fillTbl"],"version":3,"file":"index.5e13e026.js.map"}